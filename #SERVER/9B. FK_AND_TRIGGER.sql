--==================================== TRIGGER ====================================

-- ========================= INVOICE =========================
--KWT_PEMBAYARAN_AI (NO_INVOICE)
IF OBJECT_ID ('KWT_PEMBAYARAN_AI_IVC', 'TR') IS NOT NULL
	DROP TRIGGER KWT_PEMBAYARAN_AI_IVC;
GO
CREATE TRIGGER KWT_PEMBAYARAN_AI_IVC
	ON KWT_PEMBAYARAN_AI
	AFTER INSERT
AS
	SET NOCOUNT ON
	DECLARE 
	@n VARCHAR(50),
		@rkv VARCHAR(50), @rbg VARCHAR(50), @rhn VARCHAR(50), @rrv VARCHAR(50), 
		@rdbg VARCHAR(50), @rdrv VARCHAR(50),
		@rlbg VARCHAR(50), @rlrv VARCHAR(50), 
	@idp VARCHAR(50), 
	@trx INT,
	@aktif_air INT = 0,
	@aktif_ipl INT = 0,
	@na VARCHAR(10) = '',
	@my VARCHAR(10) = 
		CASE MONTH(GETDATE())
			WHEN 1 THEN 'I' WHEN 2 THEN 'II' WHEN 3 THEN 'III' WHEN 4 THEN 'IV' WHEN 5 THEN 'V' WHEN 6 THEN 'VI' WHEN 7 THEN 'VII' WHEN 8 THEN 'VIII' WHEN 9 THEN 'IX' WHEN 10 THEN 'X' WHEN 11 THEN 'XI' WHEN 12 THEN 'XII'
			ELSE '-'
		END + '/' +
		CAST(YEAR(GETDATE()) AS VARCHAR)
		
	SELECT TOP 1 
		@rkv = REG_IVC_KV,
		@rbg = REG_IVC_BG,
		@rhn = REG_IVC_HN,
		@rrv = REG_IVC_RV,
		
		@rlbg = REG_IVC_LBG,
		@rlrv = REG_IVC_LRV, 
		
		@rdbg = REG_IVC_DBG,
		@rdrv = REG_IVC_DRV
	FROM KWT_PARAMETER
	
	DECLARE cur_ins CURSOR FOR SELECT ID_PEMBAYARAN, TRX, AKTIF_AIR, AKTIF_IPL FROM INSERTED
	OPEN cur_ins
	
	FETCH NEXT FROM cur_ins INTO @idp, @trx, @aktif_air, @aktif_ipl
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF (@aktif_ipl = 1 AND @aktif_air = 0) BEGIN SET @na = 'NA/' END ELSE BEGIN SET @na = '' END
		
		IF (@trx = 1) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_KV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rkv + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_KV = COU_IVC_KV + 1
		END
		ELSE IF (@trx = 2) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_BG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rbg + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_BG = COU_IVC_BG + 1
		END
		ELSE IF (@trx = 3) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_HN AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rhn + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_HN = COU_IVC_HN + 1
		END
		ELSE IF (@trx = 4) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_RV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rrv + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_RV = COU_IVC_RV + 1
		END
		
		
		ELSE IF (@trx = 5) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_LBG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rlbg + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_LBG = COU_IVC_LBG + 1
		END
		ELSE IF (@trx = 6) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_LRV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rlrv + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_LRV = COU_IVC_LRV + 1
		END
		
		
		ELSE IF (@trx = 7) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_DBG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rdbg + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_DBG = COU_IVC_DBG + 1
		END
		ELSE IF (@trx = 8) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_DRV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rdrv + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_DRV = COU_IVC_DRV + 1
		END
		
		FETCH NEXT FROM cur_ins INTO @idp, @trx, @aktif_air, @aktif_ipl
	END
	
	CLOSE cur_ins
	DEALLOCATE cur_ins
GO

-- ========================= UPDATE KWITANSI =========================
--KWT_PEMBAYARAN_AI (STATUS_BAYAR)
IF OBJECT_ID ('KWT_PEMBAYARAN_AI_KWT', 'TR') IS NOT NULL
	DROP TRIGGER KWT_PEMBAYARAN_AI_KWT;
GO
CREATE TRIGGER KWT_PEMBAYARAN_AI_KWT 
	ON KWT_PEMBAYARAN_AI
	AFTER UPDATE
AS 
IF UPDATE (STATUS_BAYAR)
BEGIN
	SET NOCOUNT ON
	DECLARE 
	@n VARCHAR(50),
		@rkv VARCHAR(50), @rbg VARCHAR(50), @rhn VARCHAR(50), @rrv VARCHAR(50), 
		@rdbg VARCHAR(50), @rdrv VARCHAR(50),
		@rlbg VARCHAR(50), @rlrv VARCHAR(50), 
	@idp VARCHAR(50),
	@trx INT,
	@sb INT,
	@aktif_air INT = 0,
	@aktif_ipl INT = 0,
	@na VARCHAR(10) = '',
	@my VARCHAR(10) = 
		CASE MONTH(GETDATE())
			WHEN 1 THEN 'I' WHEN 2 THEN 'II' WHEN 3 THEN 'III' WHEN 4 THEN 'IV' WHEN 5 THEN 'V' WHEN 6 THEN 'VI' WHEN 7 THEN 'VII' WHEN 8 THEN 'VIII' WHEN 9 THEN 'IX' WHEN 10 THEN 'X' WHEN 11 THEN 'XI' WHEN 12 THEN 'XII'
			ELSE '-'
		END + '/' +
		CAST(YEAR(GETDATE()) AS VARCHAR)

	SELECT TOP 1 
		@rkv = REG_KWT_KV,
		@rbg = REG_KWT_BG,
		@rhn = REG_KWT_HN,
		@rrv = REG_KWT_RV,
		
		@rlbg = REG_KWT_LBG,
		@rlrv = REG_KWT_LRV, 
		
		@rdbg = REG_KWT_DBG,
		@rdrv = REG_KWT_DRV
	FROM KWT_PARAMETER
	
	DECLARE cur_upd CURSOR FOR SELECT ID_PEMBAYARAN, TRX, STATUS_BAYAR, AKTIF_AIR, AKTIF_IPL FROM INSERTED;
	OPEN cur_upd;
	
	FETCH NEXT FROM cur_upd INTO @idp, @trx, @sb, @aktif_air, @aktif_ipl
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
	
		IF (@sb = 1)
		BEGIN
			IF (@aktif_ipl = 1 AND @aktif_air = 0) BEGIN SET @na = 'NA/' END ELSE BEGIN SET @na = '' END
			
			IF (@trx = 1) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_KV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rkv + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_KV = COU_KWT_KV + 1
			END
			ELSE IF (@trx = 2) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_BG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rbg + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_BG = COU_KWT_BG + 1
			END
			ELSE IF (@trx = 3) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_HN AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rhn + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_HN = COU_KWT_HN + 1
			END
			ELSE IF (@trx = 4) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_RV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rrv + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_RV = COU_KWT_RV + 1
			END
			
			
			ELSE IF (@trx = 5) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_LBG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rlbg + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_LBG = COU_KWT_LBG + 1
			END
			ELSE IF (@trx = 6) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_LRV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rlrv + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_LRV = COU_KWT_LRV + 1
			END 
			
			
			ELSE IF (@trx = 7) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_DBG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rdbg + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_DBG = COU_KWT_DBG + 1
			END
			ELSE IF (@trx = 8) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_DRV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rdrv + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_DRV = COU_KWT_DRV + 1
			END 
			
		END 
		
		FETCH NEXT FROM cur_upd INTO @idp, @trx, @sb, @aktif_air, @aktif_ipl
	END 
	 
	CLOSE cur_upd 
	DEALLOCATE cur_upd 
	
END 
GO 



