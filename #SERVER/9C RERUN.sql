--========================== UPPERCASE FIRST LETTER 
IF OBJECT_ID (N'dbo.UCF', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.UCF; 
GO 
CREATE FUNCTION dbo.UCF (@string VARCHAR(200)) RETURNS VARCHAR(200)
AS
BEGIN
	DECLARE 
	@Index INT = 1, 
	@ResultString VARCHAR(200) = ''
	
	WHILE (@Index <LEN(@string)+1)
	BEGIN
		IF (@Index = 1) 
		BEGIN
			SET @ResultString = @ResultString + UPPER(SUBSTRING(@string, @Index, 1)) 
			SET @Index = @Index+ 1 
		END
		ELSE IF ((SUBSTRING(@string, @Index-1, 1) =' 'or SUBSTRING(@string, @Index-1, 1) ='-' or SUBSTRING(@string, @Index+1, 1) ='-') and @Index+1 <> LEN(@string))
		BEGIN
			SET @ResultString = @ResultString + UPPER(SUBSTRING(@string,@Index, 1))
			SET @Index = @Index +1 
		END
		ELSE 
		BEGIN
			SET @ResultString = @ResultString + LOWER(SUBSTRING(@string,@Index, 1))
			SET @Index = @Index +1 
		END
	END 

	IF (@@ERROR <> 0) 
	BEGIN
		SET @ResultString = @string
	END 
	
	RETURN @ResultString
END
GO 

--========================== TRIM 
IF OBJECT_ID (N'dbo.TRIM', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.TRIM; 
GO 
CREATE FUNCTION dbo.TRIM (@s VARCHAR(MAX)) RETURNS VARCHAR(MAX) 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN LTRIM(RTRIM(@s)) 
END 
GO 

--========================== PTDF (First Periode) 
IF OBJECT_ID (N'dbo.PTDF', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.PTDF; 
GO 
CREATE FUNCTION dbo.PTDF (@p VARCHAR(8)) RETURNS DATE 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN (CAST(@p + '01' AS DATE)) 
END 
GO 

--========================== PTDL (Last Periode) 
IF OBJECT_ID (N'dbo.PTDL', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.PTDL; 
GO 
CREATE FUNCTION dbo.PTDL (@p VARCHAR(8)) RETURNS DATE 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN (DATEADD(s,-1,DATEADD(MM, DATEDIFF(MM,0,CAST(@p + '01' AS DATE))+1,0))) 
END 
GO 

--========================== PTPS (Periode to string MM-YYYY)
IF OBJECT_ID (N'dbo.PTPS', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.PTPS; 
GO 
CREATE FUNCTION dbo.PTPS (@p VARCHAR(8)) RETURNS VARCHAR(9) 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN (RIGHT(@p,2) + '-' + LEFT(@p,4)) 
END 
GO 

--========================== ETN (Empty to NULL)
IF OBJECT_ID (N'dbo.ETN', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.ETN; 
GO 
CREATE FUNCTION dbo.ETN (@v VARCHAR(MAX)) RETURNS VARCHAR(MAX) 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN NULLIF(@v,'') 
END 
GO 

--========================== PPN 
IF OBJECT_ID (N'dbo.PPN', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.PPN; 
GO 
CREATE FUNCTION dbo.PPN (@p NUMERIC(30,2), @v NUMERIC(30,2)) RETURNS NUMERIC(30,2) 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN @v * @p/(100+@p) 
END 
GO 

--========================== DPP 
IF OBJECT_ID (N'dbo.DPP', N'FN') IS NOT NULL 
	DROP FUNCTION dbo.DPP; 
GO 
CREATE FUNCTION dbo.DPP (@p NUMERIC(30,2), @v NUMERIC(30,2)) RETURNS NUMERIC(30,2) 
WITH EXECUTE AS CALLER 
AS 
BEGIN 
	RETURN @v * 100/(100+@p)
END 
GO 

--========================== TESTER 
DECLARE 
@d DATE = CAST('2004/12/31' AS DATE), 
@v NUMERIC(30,2) = 12000, 
@p NUMERIC(30,2) = 20 

SELECT 
	dbo.PTDF('201312') AS PTDF 
	,dbo.PTDL('201312') AS PTDL 
	,dbo.PTPS('201312') AS PTPS 
	,dbo.TRIM('') AS TRIM 
	,dbo.ETN('') AS ETN 
	,dbo.PPN(@p, @v) AS PPN 
	,dbo.DPP(@p, @v) AS DPP 
	,dbo.UCF('asdas asdasd asd asd') AS UCF 
GO 


-- =========================== HELPER ============================== 
-- DATETIME TO STRING 
-- CONVERT(VARCHAR (10), FILED, 105) # DD-MM-YYYY 
-- CONVERT(VARCHAR(6), FIELD, 112) # YYYYMM 
-- CONVERT(VARCHAR(19), FILED, 120) # YYYY-MM-DD HH:MI:SS 

-- STRING TO DATETIME 
-- CONVERT(DATETIME, '$value', 105) # DD-MM-YYYY 


-- KWT_USER 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_USER') AND type in (N'U')) 
DROP TABLE KWT_USER 
GO 
CREATE TABLE KWT_USER 
( 
	ID_USER INT NOT NULL IDENTITY(1,1) PRIMARY KEY , 
	LOGIN_USER VARCHAR (100) NOT NULL UNIQUE ,
	NAMA_USER VARCHAR (100) NOT NULL , 
	PASS_USER VARCHAR (100) NOT NULL , 
	AKTIF_USER INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_USER_MODUL 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_USER_MODUL') AND type in (N'U')) 
DROP TABLE KWT_USER_MODUL 
GO 
CREATE TABLE KWT_USER_MODUL 
( 
	ID_USER INT NOT NULL , 
	ID_MODUL VARCHAR (100) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_PARAMETER 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PARAMETER') AND type in (N'U')) 
DROP TABLE KWT_PARAMETER 
GO 
CREATE TABLE KWT_PARAMETER 
( 
	-- JRP 
	JRP_PT VARCHAR (100) ,			JRP_KODE_POS VARCHAR (5) , 
	JRP_ALAMAT_1 VARCHAR (200) ,	JRP_TELP VARCHAR (100) , 
	JRP_ALAMAT_2 VARCHAR (200) ,	JRP_FAX VARCHAR (100) , 
	JRP_KOTA VARCHAR (100) ,		JRP_EMAIL VARCHAR (100) , 
	
	-- UNIT 
	UNIT_NAMA VARCHAR (100) ,		UNIT_KODE_POS VARCHAR (5) , 
	UNIT_ALAMAT_1 VARCHAR (200) ,	UNIT_TELP VARCHAR (100) , 
	UNIT_ALAMAT_2 VARCHAR (200) ,	UNIT_FAX VARCHAR (100) , 
	UNIT_KOTA VARCHAR (100) ,		UNIT_EMAIL VARCHAR (100) , 
	
	-- GLOBAL 
	---JABATAN 
	NAMA_PIMPINAN VARCHAR (100),		JBT_PIMPINAN VARCHAR (100), 
	NAMA_PAJAK VARCHAR (100),			JBT_PAJAK VARCHAR (100), 
	NAMA_ADM VARCHAR (100),	JBT_ADM VARCHAR (100), 
	
	---REG 
	COU_NP NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_NPWP VARCHAR (30) , 
	PERSEN_PPN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	REG_FP VARCHAR (15) , 
	COU_FP NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	DENDA_RUPIAH NUMERIC (25) NOT NULL DEFAULT 0 , 
	DENDA_PERSEN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	
	-- KAVLING KOSONG 
	ADM_KV NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_IVC_KV VARCHAR (30) , 
	COU_IVC_KV NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_KV VARCHAR (30) , 
	COU_KWT_KV NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- MASA MEMBANGUN 
	ADM_BG NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_IVC_BG VARCHAR (30) , 
	COU_IVC_BG NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_BG VARCHAR (30) , 
	COU_KWT_BG NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- HUNIAN 
	ADM_HN NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_HN VARCHAR (30) , 
	COU_IVC_HN NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_HN VARCHAR (30) , 
	COU_KWT_HN NUMERIC (25) NOT NULL DEFAULT 0 , 

	-- RENOVASI 
	ADM_RV NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_RV VARCHAR (30) , 
	COU_IVC_RV NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_RV VARCHAR (30) , 
	COU_KWT_RV NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- MASA MEMBANGUN (DEPOSIT) 
	ADM_LBG NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_LBG VARCHAR (30) , 
	COU_IVC_LBG NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_LBG VARCHAR (30) , 
	COU_KWT_LBG NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- RENOVASI (DEPOSIT) 
	ADM_LRV NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_LRV VARCHAR (30) , 
	COU_IVC_LRV NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_LRV VARCHAR (30) , 
	COU_KWT_LRV NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- MASA MEMBANGUN (DEPOSIT) 
	ADM_DBG NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_DBG VARCHAR (30) , 
	COU_IVC_DBG NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_DBG VARCHAR (30) , 
	COU_KWT_DBG NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	-- RENOVASI (DEPOSIT) 
	ADM_DRV NUMERIC (6) NOT NULL DEFAULT 0 , 
	REG_IVC_DRV VARCHAR (30) , 
	COU_IVC_DRV NUMERIC (25) NOT NULL DEFAULT 0 , 
	REG_KWT_DRV VARCHAR (30) , 
	COU_KWT_DRV NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_BANK 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_BANK') AND type in (N'U')) 
DROP TABLE KWT_BANK 
GO 
CREATE TABLE KWT_BANK 
( 
	KODE_BANK VARCHAR (3) PRIMARY KEY , 
	NAMA_BANK VARCHAR (40) , 
	CABANG_BANK VARCHAR (30) , 
	ALAMAT_BANK TEXT , 
	COU_BD NUMERIC (25) NOT NULL DEFAULT 0 , 
	COU_BDT NUMERIC (25) NOT NULL DEFAULT 0 , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_SEKTOR 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_SEKTOR') AND type in (N'U')) 
DROP TABLE KWT_SEKTOR 
GO 
CREATE TABLE KWT_SEKTOR 
( 
	KODE_SEKTOR VARCHAR (50) PRIMARY KEY , 
	NAMA_SEKTOR VARCHAR (40) , 
	KODE_PEL VARCHAR (2) , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_CLUSTER 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_CLUSTER') AND type in (N'U')) 
DROP TABLE KWT_CLUSTER 
GO 
CREATE TABLE KWT_CLUSTER 
( 
	KODE_CLUSTER VARCHAR (50) PRIMARY KEY , 
	KODE_SEKTOR VARCHAR (50) , 
	NAMA_CLUSTER VARCHAR (40) , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_SK_AIR 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_SK_AIR') AND type in (N'U')) 
DROP TABLE KWT_SK_AIR 
GO 
CREATE TABLE KWT_SK_AIR 
( 
	KODE_SK VARCHAR (3) PRIMARY KEY , 
	NO_SK VARCHAR (30) , 
	TGL_SK DATE , 
	TGL_BERLAKU DATE , 
	PEMBUAT VARCHAR (30) , 
	STATUS_SK INT NOT NULL DEFAULT 0 , -- (0 = TDK. AKTIF) (1 = AKTIF) 
	KET TEXT , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_TIPE_AIR 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_TIPE_AIR') AND type in (N'U')) 
DROP TABLE KWT_TIPE_AIR 
GO 
CREATE TABLE KWT_TIPE_AIR 
( 
	KODE_TIPE VARCHAR (2) PRIMARY KEY , 
	NAMA_TIPE VARCHAR (30) , 
	PERSEN_ASUMSI_1 NUMERIC (6, 2) NOT NULL DEFAULT 0 , 
	PERSEN_ASUMSI_2 NUMERIC (6, 2) NOT NULL DEFAULT 0 , 
	PERSEN_ASUMSI_3 NUMERIC (6, 2) NOT NULL DEFAULT 0 , 
	PERSEN_ASUMSI_4 NUMERIC (6, 2) NOT NULL DEFAULT 0 , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_TARIF_AIR 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_TARIF_AIR') AND type in (N'U')) 
DROP TABLE KWT_TARIF_AIR 
GO 
CREATE TABLE KWT_TARIF_AIR 
( 
	KEY_AIR VARCHAR (50) PRIMARY KEY , 
	KODE_SK VARCHAR (3) , 
	KODE_TIPE VARCHAR (2) , 
	ABONEMEN NUMERIC (6) NOT NULL DEFAULT 0 , 
	STAND_MIN_PAKAI NUMERIC (5) NOT NULL DEFAULT 0 , 
	BLOK1 NUMERIC (5) NOT NULL DEFAULT 0 , 
	BLOK2 NUMERIC (5) NOT NULL DEFAULT 0 , 
	BLOK3 NUMERIC (5) NOT NULL DEFAULT 0 , 
	BLOK4 NUMERIC (5) NOT NULL DEFAULT 0 , 
	TARIF1 NUMERIC (8) NOT NULL DEFAULT 0 , 
	TARIF2 NUMERIC (8) NOT NULL DEFAULT 0 , 
	TARIF3 NUMERIC (8) NOT NULL DEFAULT 0 , 
	TARIF4 NUMERIC (8) NOT NULL DEFAULT 0 , 
	KET TEXT , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_SK_IPL 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_SK_IPL') AND type in (N'U')) 
DROP TABLE KWT_SK_IPL 
GO 
CREATE TABLE KWT_SK_IPL 
( 
	KODE_SK VARCHAR (3) PRIMARY KEY , 
	NO_SK VARCHAR (30) , 
	TGL_SK DATE , 
	TGL_BERLAKU DATE , 
	PEMBUAT VARCHAR (30) , 
	STATUS_SK INT, -- (0 = TDK. AKTIF) (1 = AKTIF) 
	KET TEXT , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_TIPE_IPL 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_TIPE_IPL') AND type in (N'U')) 
DROP TABLE KWT_TIPE_IPL 
GO 
CREATE TABLE KWT_TIPE_IPL 
( 
	KODE_TIPE VARCHAR (9) PRIMARY KEY , 
	NAMA_TIPE VARCHAR (100) , 
	STATUS_BLOK INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_TARIF_IPL 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_TARIF_IPL') AND type in (N'U')) 
DROP TABLE KWT_TARIF_IPL 
GO 
CREATE TABLE KWT_TARIF_IPL 
( 
	KEY_IPL VARCHAR (50) PRIMARY KEY , 
	KODE_SK VARCHAR (3) , 
	KODE_TIPE VARCHAR (9) , 
	TIPE_TARIF_IPL INT NOT NULL DEFAULT 0 ,		-- TIPE_TARIF (0 = TETAP) (1 = PER METER) 
	TARIF_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	NILAI_DEPOSIT NUMERIC (15) NOT NULL DEFAULT 0 , 
	KET TEXT , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_ZMB 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_ZMB') AND type in (N'U')) 
DROP TABLE KWT_ZMB 
GO 
CREATE TABLE KWT_ZMB 
( 
	KODE_ZONA VARCHAR (50) PRIMARY KEY , 
	NAMA_ZONA VARCHAR (30) , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_DISKON_KHUSUS 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_DISKON_KHUSUS') AND type in (N'U')) 
DROP TABLE KWT_DISKON_KHUSUS 
GO 
CREATE TABLE KWT_DISKON_KHUSUS 
( 
	ID_DISKON INT NOT NULL IDENTITY(1,1) PRIMARY KEY ,	-- Penambahan (Untuk Proses Edit) 
	KODE_BLOK VARCHAR (100) , 
	PERIODE_IPL_AWAL VARCHAR (6) , 
	PERIODE_IPL_AKHIR VARCHAR (6) , 
	DISKON_AIR_NILAI NUMERIC (12, 2) NOT NULL DEFAULT 0 , 
	DISKON_IPL_NILAI NUMERIC (12, 2) NOT NULL DEFAULT 0 , 
	DISKON_AIR_PERSEN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	DISKON_IPL_PERSEN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	KET TEXT , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_PELANGGAN_LOOKUP 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PELANGGAN_LOOKUP') AND type in (N'U')) 
DROP TABLE KWT_PELANGGAN_LOOKUP 
GO 
CREATE TABLE KWT_PELANGGAN_LOOKUP 
( 
	NO_KTP			VARCHAR (100) PRIMARY KEY , 
	NAMA_PELANGGAN	VARCHAR (200) , 
	NPWP			VARCHAR (100) , 
	ALAMAT			TEXT , 
	NO_TELEPON		VARCHAR (100) , 
	NO_HP			VARCHAR (100) , 
	KODE_BANK		VARCHAR (3) , 
	NO_REKENING		VARCHAR (40) , 
	
	SM_NAMA_PELANGGAN VARCHAR (200) , 
	SM_NO_KTP VARCHAR (100) , 
	SM_NPWP VARCHAR (100) , 
	SM_NO_HP VARCHAR (100) , 
	SM_NO_TELEPON VARCHAR (100) , 
	SM_ALAMAT TEXT 
) 
GO 

-- KWT_PELANGGAN 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PELANGGAN') AND type in (N'U')) 
DROP TABLE KWT_PELANGGAN 
GO 
CREATE TABLE KWT_PELANGGAN 
( 
	NO_PELANGGAN VARCHAR (100) PRIMARY KEY , 
	TGL_PPJB DATE , 
	INFO_TAGIHAN INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	
	KODE_SEKTOR VARCHAR (50) , 
	KODE_CLUSTER VARCHAR (50) , 
	KODE_BLOK VARCHAR (100) NOT NULL UNIQUE , 
	LUAS_KAVLING NUMERIC (17, 2) DEFAULT 0 , 
	LUAS_BANGUNAN NUMERIC (17, 2) DEFAULT 0 , 
	STATUS_BLOK INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
	
	NAMA_PELANGGAN VARCHAR (200) , 
	NO_KTP VARCHAR (100) , 
	NPWP VARCHAR (100) , 
	NO_HP VARCHAR (100) , 
	NO_TELEPON VARCHAR (100) , 
	ALAMAT TEXT , 
	
	AKTIF_SM INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	SM_NAMA_PELANGGAN VARCHAR (200) , 
	SM_NO_KTP VARCHAR (100) , 
	SM_NPWP VARCHAR (100) , 
	SM_NO_HP VARCHAR (100) , 
	SM_NO_TELEPON VARCHAR (100) , 
	SM_ALAMAT TEXT , 
	
	-- PEMBAYARAN 
	AKTIF_AD INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	KODE_BANK VARCHAR (3) , 
	NO_REKENING VARCHAR (50) , 
	
	GOLONGAN INT NOT NULL DEFAULT 0 , -- (0 = STANDAR) (1 = BISNIS) 
	TIPE_DENDA INT NOT NULL DEFAULT 0 , -- (0 = RUPIAH) (1 = PERSEN) 
	
	-- AIR 
	AKTIF_AIR INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	KODE_ZONA VARCHAR (50) , 
	TIPE_AIR VARCHAR (2) , 
	KEY_AIR VARCHAR (50) , 
	
	TGL_PEMUTUSAN DATE , 
	PETUGAS VARCHAR (100) , 
	PERIODE_PUTUS VARCHAR (6) , 
	
	-- IPL 
	AKTIF_IPL INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	TIPE_IPL VARCHAR (9) , 
	KEY_IPL VARCHAR (50) , 
	
	KET TEXT , 
	
	STATUS_JOIN INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	JOIN_TO VARCHAR (30) , 
	USER_JOIN VARCHAR (100) , 
	JOIN_DATE DATETIME2 (0) , 
	
	STATUS_SPLIT INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	SPLIT_FROM VARCHAR (30) , 
	USER_SPLIT VARCHAR (100) , 
	SPLIT_DATE DATETIME2 (0) , 
	
	DISABLED INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_PELANGGAN_IMP 
--=============================== 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PELANGGAN_IMP') AND type in (N'U')) 
DROP TABLE KWT_PELANGGAN_IMP 
GO 
SELECT * INTO KWT_PELANGGAN_IMP FROM KWT_PELANGGAN WHERE 1=0 
GO 

ALTER TABLE KWT_PELANGGAN_IMP ADD PRIMARY KEY (NO_PELANGGAN) 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_INFO_TAGIHAN DEFAULT 0 FOR INFO_TAGIHAN 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT UQ_KODE_BLOK UNIQUE (KODE_BLOK)
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_LUAS_KAVLING DEFAULT 0 FOR LUAS_KAVLING 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_LUAS_BANGUNAN DEFAULT 0 FOR LUAS_BANGUNAN 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_STATUS_BLOK DEFAULT 0 FOR STATUS_BLOK 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_AKTIF_SM DEFAULT 0 FOR AKTIF_SM 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_AKTIF_AD DEFAULT 0 FOR AKTIF_AD 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_GOLONGAN DEFAULT 0 FOR GOLONGAN 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_TIPE_DENDA DEFAULT 0 FOR TIPE_DENDA 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_AKTIF_AIR DEFAULT 0 FOR AKTIF_AIR 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_AKTIF_IPL DEFAULT 0 FOR AKTIF_IPL 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_STATUS_JOIN DEFAULT 0 FOR STATUS_JOIN 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_STATUS_SPLIT DEFAULT 0 FOR STATUS_SPLIT 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_DISABLED DEFAULT 0 FOR DISABLED 
ALTER TABLE KWT_PELANGGAN_IMP ADD CONSTRAINT DF_CREATED_DATE DEFAULT GETDATE() FOR CREATED_DATE 
ALTER TABLE KWT_PELANGGAN_IMP ADD STATUS_PROSES INT NOT NULL DEFAULT 0
GO 


-- KWT_PEMUTUSAN_AIR 
--=============================== 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PEMUTUSAN_AIR') AND type in (N'U')) 
DROP TABLE KWT_PEMUTUSAN_AIR 
GO 
CREATE TABLE KWT_PEMUTUSAN_AIR 
( 
	NO_PELANGGAN VARCHAR (100) , 
	PERIODE_PUTUS VARCHAR (6) , 
	TGL_PEMUTUSAN DATE , 
	PETUGAS VARCHAR (100) , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 
--=============================== MASA MEMBANGUN =============================== 
-- KWT_PERIODE_DEPOSIT 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PERIODE_DEPOSIT') AND type in (N'U')) 
DROP TABLE KWT_PERIODE_DEPOSIT 
GO 
CREATE TABLE KWT_PERIODE_DEPOSIT 
( 
	ID_DEPOSIT VARCHAR (100) PRIMARY KEY ,			-- TRX#PERIODE_IPL_AWAL#KODE_BLOK 
	TRX INT NOT NULL , 
		-- 7 = MASA MEMBANGUN (DEPOSIT) 
		-- 8 = RENOVASI (DEPOSIT) 
		
	KODE_BLOK VARCHAR (100) , 
	
	PERIODE_IPL_AWAL VARCHAR (6) , 
	PERIODE_IPL_AKHIR VARCHAR (6) , 
	JUMLAH_PERIODE_IPL INT NOT NULL DEFAULT 1 , 
	
	TIPE_DEPOSIT INT NOT NULL DEFAULT 0 , -- (0 = TDK. MENGGUNAKAN DEPOSIT [NOL]) (1 = DARI DEPOSIT TARIF IPL) 
	
	NILAI_DEPOSIT NUMERIC (15) NOT NULL DEFAULT 0 , 
	NILAI_LAIN_LAIN NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	KET_DEPOSIT TEXT , 
	KET_LAIN_LAIN TEXT , 
	
	STATUS_PROSES INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() , 
	
	--TEMP
	ID_TEMP INT 
) 
GO 

--============================================== PEMBAYARAN ========================================== 
-- KWT_PEMBAYARAN_AI 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PEMBAYARAN_AI') AND type in (N'U')) 
DROP TABLE KWT_PEMBAYARAN_AI 
GO 
CREATE TABLE KWT_PEMBAYARAN_AI ( 
	ID_PEMBAYARAN VARCHAR (200) PRIMARY KEY ,	-- TRX#PERIODE_TAG#NO_PELANGGAN 
	TRX INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
		
		-- 5 = MASA MEMBANGUN (LAIN-LAIN)
		-- 6 = RENOVASI (LAIN-LAIN)
		
		-- 7 = MASA MEMBANGUN (DEPOSIT)
		-- 8 = RENOVASI (DEPOSIT)
		
	NO_INVOICE VARCHAR (150) , 
	TGL_JATUH_TEMPO DATE , 
	KET_IVC TEXT , 
	
	-- PERIODE 
	PERIODE_TAG VARCHAR (6) , 
	PERIODE_AIR VARCHAR (6) , 
	PERIODE_IPL_AWAL VARCHAR (6) , 
	PERIODE_IPL_AKHIR VARCHAR (6) , 
	JUMLAH_PERIODE_IPL INT, 
	
	NO_PELANGGAN VARCHAR (100) , 
	
	KODE_SEKTOR VARCHAR (50) , 
	KODE_CLUSTER VARCHAR (50) , 
	KODE_BLOK VARCHAR (100) , 
	STATUS_BLOK INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
	KODE_ZONA VARCHAR (50) , 
	
	AKTIF_AIR INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	AKTIF_IPL INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	
	KEY_AIR VARCHAR (50) , 
	KEY_IPL VARCHAR (50) , 
	
	GOLONGAN INT NOT NULL DEFAULT 0 , -- (0 = STANDAR) (1 = BISNIS) 
	TIPE_DENDA INT NOT NULL DEFAULT 0 , -- (0 = RUPIAH) (1 = PERSEN) 
	
	-- PERHITUNGAN AIR 
	STAND_LALU NUMERIC (15) NOT NULL DEFAULT 0 , 
	STAND_ANGKAT NUMERIC (15) NOT NULL DEFAULT 0 , 
	STAND_AKHIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	BLOK1 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK2 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK3 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK4 NUMERIC (10) NOT NULL DEFAULT 0 , 
	STAND_MIN_PAKAI NUMERIC (10) NOT NULL DEFAULT 0 , 
	TARIF1 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF2 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF3 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF4 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF_MIN_PAKAI NUMERIC (10) NOT NULL DEFAULT 0 , 
	
	-- PERHITUNGAN IPL 
	LUAS_KAVLING NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	JUMLAH_AIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	ABONEMEN NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	DENDA NUMERIC (15) NOT NULL DEFAULT 0 , 
	ADM NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_BAYAR NUMERIC (20) DEFAULT 0 , 
	
	DISKON_AIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	TGL_DISKON_AIR DATETIME2 (0) , 
	USER_DISKON_AIR VARCHAR (100) , 
	KET_DISKON_AIR TEXT , 
	
	DISKON_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	TGL_DISKON_IPL DATETIME2 (0) , 
	USER_DISKON_IPL VARCHAR (100) , 
	KET_DISKON_IPL TEXT , 
	
	PERSEN_PPN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	NILAI_PPN NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	STATUS_BAYAR INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	NO_KWITANSI VARCHAR (100) , 
	BAYAR_VIA VARCHAR (50) , 
	CARA_BAYAR INT NOT NULL DEFAULT 0 , 
		-- (0 = BELUM) 
		-- (1 = TUNAI) 
		-- (2 = K. DEBIT) 
		-- (3 = K. KREDIT) 
		-- (4 = T. BANK) 
	TGL_BAYAR_BANK DATETIME2 (0) , 
	TGL_BAYAR_SYS DATETIME2 (0) , 
	USER_BAYAR VARCHAR (100) , 
	KET_BAYAR TEXT , 
	
	STATUS_CETAK_KWT INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	USER_CETAK_KWT VARCHAR (100) , 
	TGL_CETAK_KWT DATETIME2 (0) ,
	
	STATUS_CETAK_IVC INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	TGL_CETAK_IVC DATETIME2 (0) , 
	USER_CETAK_IVC VARCHAR (100) ,
	
	STATUS_BATAL INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	USER_BATAL VARCHAR (100) , 
	TGL_BATAL DATETIME2 (0) , 
	KET_BATAL TEXT , 
	
	STATUS_POST_PB INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	STATUS_POST_BD INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	
	NO_FP VARCHAR (100) , 
	TGL_FP DATE , 
	TGL_POST_FP DATE , 
	STATUS_CETAK_FP INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	TGL_CETAK_FP DATETIME2 (0) , 
	USER_CETAK_FP VARCHAR (100) ,
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() , 
	
	--TEMP
	ID_TEMP INT 
) 
GO 

-- KWT_PEMBAYARAN_AI_TEMP
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_PEMBAYARAN_AI_TEMP') AND type in (N'U')) 
DROP TABLE KWT_PEMBAYARAN_AI_TEMP 
GO 
CREATE TABLE KWT_PEMBAYARAN_AI_TEMP ( 
	ID_PEMBAYARAN VARCHAR (200) PRIMARY KEY ,	-- TRX#PERIODE_TAG#NO_PELANGGAN 
	TRX INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
		
		-- 5 = MASA MEMBANGUN (LAIN-LAIN)
		-- 6 = RENOVASI (LAIN-LAIN)
		
		-- 7 = MASA MEMBANGUN (DEPOSIT)
		-- 8 = RENOVASI (DEPOSIT)
		
	NO_INVOICE VARCHAR (150) , 
	TGL_JATUH_TEMPO DATE , 
	KET_IVC TEXT , 
	
	-- PERIODE 
	PERIODE_TAG VARCHAR (6) , 
	PERIODE_AIR VARCHAR (6) , 
	PERIODE_IPL_AWAL VARCHAR (6) , 
	PERIODE_IPL_AKHIR VARCHAR (6) , 
	JUMLAH_PERIODE_IPL INT, 
	
	NO_PELANGGAN VARCHAR (100) , 
	
	KODE_SEKTOR VARCHAR (50) , 
	KODE_CLUSTER VARCHAR (50) , 
	KODE_BLOK VARCHAR (100) , 
	STATUS_BLOK INT NOT NULL , 
		-- 1 = KAVLING KOSONG 
		-- 2 = MASA MEMBANGUN 
		-- 3 = HUNIA 
		-- 4 = RENOVASI 
		
	KODE_ZONA VARCHAR (50) , 
	
	AKTIF_AIR INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	AKTIF_IPL INT NOT NULL DEFAULT 0 , -- (0 = TIDAK) (1 = YA) 
	
	KEY_AIR VARCHAR (50) , 
	KEY_IPL VARCHAR (50) , 
	
	GOLONGAN INT NOT NULL DEFAULT 0 , -- (0 = STANDAR) (1 = BISNIS) 
	TIPE_DENDA INT NOT NULL DEFAULT 0 , -- (0 = RUPIAH) (1 = PERSEN) 
	
	-- PERHITUNGAN AIR 
	STAND_LALU NUMERIC (15) NOT NULL DEFAULT 0 , 
	STAND_ANGKAT NUMERIC (15) NOT NULL DEFAULT 0 , 
	STAND_AKHIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	BLOK1 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK2 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK3 NUMERIC (10) NOT NULL DEFAULT 0 , 
	BLOK4 NUMERIC (10) NOT NULL DEFAULT 0 , 
	STAND_MIN_PAKAI NUMERIC (10) NOT NULL DEFAULT 0 , 
	TARIF1 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF2 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF3 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF4 NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF_MIN_PAKAI NUMERIC (10) NOT NULL DEFAULT 0 , 
	
	-- PERHITUNGAN IPL 
	LUAS_KAVLING NUMERIC (17, 2) NOT NULL DEFAULT 0 , 
	TARIF_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	JUMLAH_AIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	ABONEMEN NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	DENDA NUMERIC (15) NOT NULL DEFAULT 0 , 
	ADM NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_BAYAR NUMERIC (20) DEFAULT 0 , 
	
	DISKON_AIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	TGL_DISKON_AIR DATETIME2 (0) , 
	USER_DISKON_AIR VARCHAR (100) , 
	KET_DISKON_AIR TEXT , 
	
	DISKON_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	TGL_DISKON_IPL DATETIME2 (0) , 
	USER_DISKON_IPL VARCHAR (100) , 
	KET_DISKON_IPL TEXT , 
	
	PERSEN_PPN NUMERIC (5, 2) NOT NULL DEFAULT 0 , 
	NILAI_PPN NUMERIC (15) NOT NULL DEFAULT 0 , 
	
	STATUS_BAYAR INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	NO_KWITANSI VARCHAR (100) , 
	BAYAR_VIA VARCHAR (50) , 
	CARA_BAYAR INT NOT NULL DEFAULT 0 , 
		-- (0 = BELUM) 
		-- (1 = TUNAI) 
		-- (2 = K. DEBIT) 
		-- (3 = K. KREDIT) 
		-- (4 = T. BANK) 
	TGL_BAYAR_BANK DATETIME2 (0) , 
	TGL_BAYAR_SYS DATETIME2 (0) , 
	USER_BAYAR VARCHAR (100) , 
	KET_BAYAR TEXT , 
	
	STATUS_CETAK_KWT INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	USER_CETAK_KWT VARCHAR (100) , 
	TGL_CETAK_KWT DATETIME2 (0) ,
	
	STATUS_CETAK_IVC INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	TGL_CETAK_IVC DATETIME2 (0) , 
	USER_CETAK_IVC VARCHAR (100) ,
	
	STATUS_BATAL INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	USER_BATAL VARCHAR (100) , 
	TGL_BATAL DATETIME2 (0) , 
	KET_BATAL TEXT , 
	
	STATUS_POST_PB INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	STATUS_POST_BD INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	
	NO_FP VARCHAR (100) , 
	TGL_FP DATE , 
	TGL_POST_FP DATE , 
	STATUS_CETAK_FP INT NOT NULL DEFAULT 0 , -- (0 = BELUM) (1 = SUDAH) 
	TGL_CETAK_FP DATETIME2 (0) , 
	USER_CETAK_FP VARCHAR (100) ,
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() , 
	
	--TEMP
	ID_TEMP INT 
) 
GO 

-- KWT_POST_PEMBAYARAN 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_POST_PEMBAYARAN') AND type in (N'U')) 
DROP TABLE KWT_POST_PEMBAYARAN 
GO 
CREATE TABLE KWT_POST_PEMBAYARAN 
( 
	USER_POST VARCHAR (100) , 
	TGL_POST DATE , 
	
	JUMLAH_AIR NUMERIC (15) NOT NULL DEFAULT 0 , 
	ABONEMEN NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_IPL NUMERIC (15) NOT NULL DEFAULT 0 , 
	DENDA NUMERIC (15) NOT NULL DEFAULT 0 , 
	ADM NUMERIC (15) NOT NULL DEFAULT 0 , 
	JUMLAH_BAYAR NUMERIC (20) DEFAULT 0 , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_POST_BD 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_POST_BD') AND type in (N'U')) 
DROP TABLE KWT_POST_BD 
GO 
CREATE TABLE KWT_POST_BD 
( 
	USER_BD VARCHAR (100) , 
	BANK_BD VARCHAR (3) , 
	NO_BD VARCHAR (100) , 
	NO_BDT VARCHAR (100) , 
	JUMLAH_BD NUMERIC (25) NOT NULL DEFAULT 0 , 
	JUMLAH_BDT NUMERIC (25) NOT NULL DEFAULT 0 , 
	TGL_BD DATE , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 

-- KWT_POST_FP 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'KWT_POST_FP') AND type in (N'U')) 
DROP TABLE KWT_POST_FP 
GO 
CREATE TABLE KWT_POST_FP 
( 
	USER_POST VARCHAR (100) , TGL_POST DATE , 
	USER_BATAL VARCHAR (100) , TGL_BATAL DATE , 
	
	USER_MODIFIED VARCHAR (100) , 
	MODIFIED_DATE DATETIME2 (0) , 
	USER_CREATED VARCHAR (100) , 
	CREATED_DATE DATETIME2 (0) DEFAULT GETDATE() 
) 
GO 


-- ====================== KWT_USER ====================== 
TRUNCATE TABLE KWT_USER 
GO 

INSERT INTO KWT_USER (LOGIN_USER, NAMA_USER, PASS_USER, AKTIF_USER)
VALUES 
('SYSTEM','System',CONVERT(NVARCHAR(32),HashBytes('MD5', 'SYSTEM'), 2),'1'), -- 1 
('VIRTUALACCOUNT','Virtual Account',CONVERT(NVARCHAR(32),HashBytes('MD5', 'VIRTUALACCOUNT'), 2),'1'), -- 2 
('AUTODEBET','Autodebet',CONVERT(NVARCHAR(32),HashBytes('MD5', 'AUTODEBET'), 2),'1'), -- 3 
('DITO','Dito Fityanto',CONVERT(NVARCHAR(32),HashBytes('MD5', 'DITO'), 2),'1'), -- 4

('RAHMAWATI','Rahmawati',CONVERT(NVARCHAR(32),HashBytes('MD5', 'RAHMAWATI'), 2),'1'), -- 5 
('SUSI','Susi',CONVERT(NVARCHAR(32),HashBytes('MD5', 'SUSI'), 2),'1'), -- 6 
('NURLIYA','Nurliya',CONVERT(NVARCHAR(32),HashBytes('MD5', 'NURLIYA'), 2),'1'), --	7 
('YACUB','Yacub',CONVERT(NVARCHAR(32),HashBytes('MD5', 'YACUB'), 2),'1') -- 8 
GO 

-- ====================== KWT_USER_MODUL ====================== 
TRUNCATE TABLE KWT_USER_MODUL 
GO 
INSERT INTO KWT_USER_MODUL (ID_USER, ID_MODUL)
VALUES (4, 'M1'), (4, 'M2'), (4, 'M3'), (4, 'M4'), (4, 'M5'), (4, 'M6'), (4, 'M7'), (4, 'M8'), (4, 'M9'), (4, 'M10'), (4, 'M11'), (4, 'M12'), (4, 'M13'), (4, 'M15'), (4, 'M14'), (4, 'T1'), (4, 'T2'), (4, 'T3'), (4, 'T4'), (4, 'T5'), (4, 'T6'), (4, 'T7'), (4, 'T8'), (4, 'B1'), (4, 'B2'), (4, 'PA1'), (4, 'PA2'), (4, 'PD1'), (4, 'LA1'), (4, 'LA2'), (4, 'LA3'), (4, 'LA4'), (4, 'LA5'), (4, 'LA6'), (4, 'LA7'), (4, 'LA8'), (4, 'LA9'), (4, 'LD1'), (4, 'LD2'), (4, 'LD3'), (4, 'LD4'), (4, 'LD5'), (4, 'LD6'), (4, 'LD7'), (4, 'LP1'), (4, 'LP2'), (4, 'LP3'), (4, 'LB1'), (4, 'LB2'), (4, 'LB3'), (4, 'U1'), (4, 'U2'), (4, 'U3'), (4, 'U4'), (4, 'U5'), (4, 'U6'), (4, 'U7'), (4, 'U8'), (4, 'U9'), (4, 'M1'), (4, 'M2'), (4, 'M3'), (4, 'M4'), (4, 'M5'), (4, 'M6'), (4, 'M7'), (4, 'M8'), (4, 'M9'), (4, 'M10'), (4, 'M11'), (4, 'M12'), (4, 'M13'), (4, 'M14'), (4, 'LP1'), (4, 'LP2'), (4, 'LP3'), (4, 'LB1'), (4, 'LB2'), (4, 'LB3'), (4, 'U1'), (4, 'U2'), (4, 'U3'), (4, 'U4'), (4, 'U5'), (4, 'U6'), (4, 'U7'), (4, 'U8'), (4, 'U9')
GO 



INSERT INTO KWT_USER 
( 
	LOGIN_USER, 
	NAMA_USER, 
	PASS_USER, 
	AKTIF_USER 
) 
SELECT 
	UPPER(dbo.TRIM(KODE_USER)) AS LOGIN_USER, 
	dbo.UCF(LOWER(NAMA_USER)) AS NAMA_USER, 
	CONVERT(NVARCHAR(32),HashBytes('MD5', PASSWORD), 2) AS PASS_USER, 
	1 AS AKTIF_USER 
FROM [pgl].[dbo].[KWT_USER] 
ORDER BY LOGIN_USER
GO 

INSERT INTO KWT_USER 
( 
	LOGIN_USER, 
	NAMA_USER, 
	PASS_USER, 
	AKTIF_USER 
) 
SELECT 
	UPPER(dbo.TRIM(CUSR_NAME)) AS LOGIN_USER, 
	dbo.UCF(LOWER(CUSR_REAL_NAME)) AS NAMA_USER, 
	CONVERT(NVARCHAR(32),HashBytes('MD5', UPPER(dbo.TRIM(CUSR_NAME))), 2) AS PASS_USER, 
	1 AS AKTIF_USER 
FROM [pgl].[dbo].[CLASP_USER]
WHERE UPPER(dbo.TRIM(CUSR_NAME)) NOT IN (SELECT LOGIN_USER FROM [dbpkb].[dbo].[KWT_USER])
ORDER BY LOGIN_USER
GO 

-- ====================== KWT_PARAMETER ====================== 
INSERT INTO KWT_PARAMETER 
( 
	JRP_PT, JRP_KODE_POS, JRP_ALAMAT_1, JRP_TELP, JRP_ALAMAT_2, JRP_FAX, JRP_KOTA, JRP_EMAIL, 
	UNIT_NAMA, UNIT_KODE_POS, UNIT_ALAMAT_1, UNIT_TELP, UNIT_ALAMAT_2, UNIT_FAX, UNIT_KOTA, UNIT_EMAIL, 
	NAMA_PIMPINAN, JBT_PIMPINAN, NAMA_PAJAK, JBT_PAJAK, NAMA_ADM, JBT_ADM, 
	COU_NP, REG_NPWP, PERSEN_PPN, REG_FP, COU_FP, DENDA_RUPIAH, DENDA_PERSEN, 
	
	ADM_KV, REG_IVC_KV, COU_IVC_KV, REG_KWT_KV, COU_KWT_KV, 
	ADM_BG, REG_IVC_BG, COU_IVC_BG, REG_KWT_BG, COU_KWT_BG, 
	ADM_HN, REG_IVC_HN, COU_IVC_HN, REG_KWT_HN, COU_KWT_HN, 
	ADM_RV, REG_IVC_RV, COU_IVC_RV, REG_KWT_RV, COU_KWT_RV, 
	
	ADM_LBG, REG_IVC_LBG, COU_IVC_LBG, REG_KWT_LBG, COU_KWT_LBG, 
	ADM_LRV, REG_IVC_LRV, COU_IVC_LRV, REG_KWT_LRV, COU_KWT_LRV, 
	
	ADM_DBG, REG_IVC_DBG, COU_IVC_DBG, REG_KWT_DBG, COU_KWT_DBG, 
	ADM_DRV, REG_IVC_DRV, COU_IVC_DRV, REG_KWT_DRV, COU_KWT_DRV 
) 
VALUES 
( 
	'PT. JAYA REAL PROPERTY,Tbk', '15227', 'CBD Emerald Blok CE/A No.1', '021-7458888', 'Boulevard Bintaro Jaya Perigi', '021-7456666', 'Tangerang', 'system@jayareal.co.id', 
	'Pengelola Kawasan Bintaro', '1522', 'Bintaro Trade Centre Lt.2 Blok H4 No.1-33', '021-74864001', 'CBD Sektor 7, Bintaro Jaya', '021-74864002', 'Tangerang', 'system@jayareal.co.id', 
	'Wahid Utomo', 'Manager Tata Lingkungan', 'Sayid Agung Wardoyo', 'Kepala Unit Pengelola Kawasan Bintaro', NULL, NULL, 
	17550, '01.001.076.7-411.001', 10, '010.000-14.', 79644110, 10000, 3, 
	
	0, '/TAG-KV/', 1, '/KWI-KV/', 1, 
	0, '/TAG-BG/', 1, '/KWI-BG/', 1, 
	0, '/TAG-HN/', 1, '/KWI/', 1, 
	0, '/TAG-RV/', 1, '/KWI-RV/', 1, 
	
	0, '/TAG-LBG/', 1, '/KWI-LBG/', 1, 
	0, '/TAG-LRV/', 1, '/KWI-LRV/', 1, 
	
	0, '/TAG-DBG/', 1, '/KWI-DBG/', 1, 
	0, '/TAG-DRV/', 1, '/KWI-DRV/', 1 
) 
GO 

-- ====================== KWT_PELANGGAN ====================== 
TRUNCATE TABLE KWT_PELANGGAN 
GO 
INSERT INTO KWT_PELANGGAN 
( 
	NO_PELANGGAN, NAMA_PELANGGAN, NPWP, NO_TELEPON, NO_HP, 
	KODE_BANK, NO_REKENING, KODE_ZONA, TGL_PEMUTUSAN, KEY_AIR, CREATED_DATE, 
	
	INFO_TAGIHAN,
	AKTIF_AD,
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	LUAS_KAVLING, 
	LUAS_BANGUNAN, 
	STATUS_BLOK, 
	
	KEY_IPL, 
	TIPE_AIR, 
	TIPE_IPL, 
	NO_KTP, 
	ALAMAT, 
	
	TGL_PPJB, 
	PERIODE_PUTUS, 
	PETUGAS, 
	
	AKTIF_AIR, 
	AKTIF_IPL, 
	
	SM_NO_KTP, 
	SM_NAMA_PELANGGAN, 
	SM_NPWP, 
	SM_ALAMAT, 
	SM_NO_TELEPON, 
	SM_NO_HP, 
	KET,
	
	DISABLED
) 
SELECT 
	NO_PELANGGAN, NAMA_PELANGGAN, NPWP, NO_TELEPON, NO_HP, 
	KODE_BANK, NO_REKENING, KODE_ZONA, TGL_PEMUTUSAN, KEY_AIR, CREATED_DATE, 
	
	ISNULL(INFO_TAGIHAN, 0) AS INFO_TAGIHAN,
	CASE WHEN ISNUMERIC(DEBET_BANK) = 1 THEN 1 ELSE 0 END AS AKTIF_AD,
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	ISNULL(LUAS_KAVLING, 0) AS LUAS_KAVLING, 
	ISNULL(LUAS_BANGUNAN, 0) AS LUAS_BANGUNAN, 
	3 AS STATUS_BLOK, 
	
	KEY_KEB AS KEY_IPL, 
	SUBSTRING(KEY_AIR,CHARINDEX('-',KEY_AIR)+1,10) AS TIPE_AIR, 
	SUBSTRING(KEY_KEB,CHARINDEX('-',KEY_KEB)+1,10) AS TIPE_IPL, 
	NO_PELANGGAN AS NO_KTP, 
	ALAMAT_1 + ' ' + ALAMAT_2 AS ALAMAT, 
	
	TGL_SERAHTERIMA AS TGL_PPJB, 
	(RIGHT(PERIODE_PUTUS,4) + LEFT(PERIODE_PUTUS,2)) AS PERIODE_PUTUS, 
	PETUGAS, 
	
	0 AS AKTIF_AIR, 
	0 AS AKTIF_IPL, 
	
	NO_PELANGGAN AS SM_NO_KTP , 
	NAMA_PELANGGAN AS SM_NAMA_PELANGGAN , 
	NPWP AS SM_NPWP , 
	ALAMAT_1 + ' ' + ALAMAT_2 AS SM_ALAMAT , 
	NO_TELEPON AS SM_NO_TELEPON , 
	NO_HP AS SM_NO_HP, 
	
	KETERANGAN AS KET, 
	
	CASE WHEN STATUS = 'S' THEN 1 ELSE 0 END AS DISABLED 
	
FROM [pgl].[dbo].[KWT_PELANGGAN] 
GO 

INSERT INTO KWT_PEMUTUSAN_AIR (NO_PELANGGAN, PERIODE_PUTUS, TGL_PEMUTUSAN, PETUGAS) 
SELECT 
	NO_PELANGGAN, 
	PERIODE_PUTUS, 
	TGL_PEMUTUSAN, 
	PETUGAS 
FROM 
	KWT_PELANGGAN WHERE TGL_PEMUTUSAN IS NOT NULL 
GO 

-- ====================== KWT_PELANGGAN_LOOKUP ====================== 
TRUNCATE TABLE KWT_PELANGGAN_LOOKUP 
GO 
INSERT INTO KWT_PELANGGAN_LOOKUP 
( 
	NO_KTP, NAMA_PELANGGAN, NPWP, ALAMAT, NO_TELEPON, NO_HP, 
	SM_NO_KTP, SM_NAMA_PELANGGAN, SM_NPWP, SM_ALAMAT, SM_NO_TELEPON, SM_NO_HP, 
	KODE_BANK, NO_REKENING 
) 
SELECT 
	NO_KTP, NAMA_PELANGGAN, NPWP, ALAMAT, NO_TELEPON, NO_HP, 
	SM_NO_KTP, SM_NAMA_PELANGGAN, SM_NPWP, SM_ALAMAT, SM_NO_TELEPON, SM_NO_HP, 
	KODE_BANK, NO_REKENING 
FROM KWT_PELANGGAN 
GO 

-- ====================== AIR ====================== 
-- ======= KWT_SK_AIR 
TRUNCATE TABLE KWT_SK_AIR 
GO 
INSERT INTO KWT_SK_AIR 
( 
	KODE_SK, 
	NO_SK, 
	TGL_SK, 
	TGL_BERLAKU, 
	PEMBUAT, 
	STATUS_SK, 
	KET 
) 
SELECT 
	KODE_SK_AIR AS KODE_SK, 
	NO_SK_AIR AS NO_SK, 
	TGL_SK, 
	TGL_BERLAKU, 
	PEMBUAT, 
	0 AS STATUS_SK, 
	KETERANGAN AS KET 
FROM [pgl].[dbo].[KWT_HDR_AIR] 
GO 

UPDATE KWT_SK_AIR SET STATUS_SK = 1 
WHERE 
	KODE_SK = (SELECT TOP 1 KODE_SK FROM KWT_SK_AIR ORDER BY TGL_BERLAKU DESC) 
GO 

-- ======= KWT_TIPE_AIR 
TRUNCATE TABLE KWT_TIPE_AIR 
GO 
INSERT INTO KWT_TIPE_AIR 
( 
	KODE_TIPE, 
	NAMA_TIPE, 
	PERSEN_ASUMSI_1, 
	PERSEN_ASUMSI_2, 
	PERSEN_ASUMSI_3, 
	PERSEN_ASUMSI_4
) 
SELECT 
	KODE_TIPE, 
	NAMA_TIPE, 
	ISNULL(PROSEN_ASUMSI_1, 0) AS PERSEN_ASUMSI_1, 
	ISNULL(PROSEN_ASUMSI_2, 0) AS PERSEN_ASUMSI_2, 
	ISNULL(PROSEN_ASUMSI_3, 0) AS PERSEN_ASUMSI_3, 
	ISNULL(PROSEN_ASUMSI_4, 0) AS PERSEN_ASUMSI_4
FROM [pgl].[dbo].[KWT_TIPE] 
GO 

-- ======= KWT_TARIF_AIR 
TRUNCATE TABLE KWT_TARIF_AIR 
GO 
INSERT INTO KWT_TARIF_AIR 
( 
	KEY_AIR, 
	KODE_SK, 
	KODE_TIPE, 
	ABONEMEN, 
	STAND_MIN_PAKAI, 
	BLOK1, 
	BLOK2, 
	BLOK3, 
	BLOK4, 
	TARIF1, 
	TARIF2, 
	TARIF3, 
	TARIF4, 
	KET 
) 
SELECT 
	KEY_AIR, 
	KODE_SK_AIR AS KODE_SK, 
	KODE_TIPE, 
	ABONEMEN, 
	(CASE WHEN KODE_TIPE LIKE '%X0%' THEN 0 ELSE 5 END) AS STAND_MIN_PAKAI, 
	BLOK1, 
	BLOK2, 
	BLOK3, 
	BLOK4, 
	TARIP1 AS TARIF1, 
	TARIP2 AS TARIF2, 
	TARIP3 AS TARIF3, 
	TARIP4 AS TARIF4, 
	KETERANGAN AS KET 
FROM [pgl].[dbo].[KWT_DTL_AIR] 
GO 


-- ====================== IPL ====================== 
-- ======= KWT_SK_IPL 
TRUNCATE TABLE KWT_SK_IPL 
GO 
INSERT INTO KWT_SK_IPL 
( 
	KODE_SK, 
	NO_SK, 
	TGL_SK, 
	TGL_BERLAKU, 
	PEMBUAT, 
	STATUS_SK, 
	KET 
) 
SELECT 
	KODE_SK_KEB AS KODE_SK, 
	NO_SK_KEB AS NO_SK, 
	TGL_SK, 
	TGL_BERLAKU, 
	PEMBUAT, 
	0 AS STATUS_SK, 
	KETERANGAN AS KET 
FROM [pgl].[dbo].[KWT_HDR_KEB] 
GO 

UPDATE KWT_SK_IPL SET STATUS_SK = 1 
WHERE 
	KODE_SK = (SELECT TOP 1 KODE_SK FROM KWT_SK_IPL ORDER BY TGL_BERLAKU DESC) 
GO 

-- ======= KWT_TIPE_IPL 
TRUNCATE TABLE KWT_TIPE_IPL 
GO 
INSERT INTO KWT_TIPE_IPL 
( 
	KODE_TIPE, 
	NAMA_TIPE, 
	STATUS_BLOK 
) 
SELECT 
	REPLACE(KODE_TIPE, ' ', '-'), 
	NAMA_TIPE, 
	3 AS STATUS_BLOK 
FROM [pgl].[dbo].[KWT_TIPE_KEB] 
GO 

-- ======= KWT_TARIF_IPL 
TRUNCATE TABLE KWT_TARIF_IPL 
GO 
INSERT INTO KWT_TARIF_IPL 
( 
	KEY_IPL, 
	KODE_SK, 
	KODE_TIPE, 
	TIPE_TARIF_IPL, 
	TARIF_IPL, -- UNTUK PROSES DENDA (0 = STANDAR) (1 = BISNIS) 
	NILAI_DEPOSIT, 
	KET 
) 
SELECT 
	REPLACE(KEY_KEB, ' ', '-') AS KEY_IPL, 
	KODE_SK_KEB AS KODE_SK, 
	REPLACE(KODE_TIPE, ' ', '-'), 
	0 AS TIPE_TARIF_IPL, 
	TARIF_KEB AS TARIF_IPL, 
	0 AS NILAI_DEPOSIT, 
	KETERANGAN AS KET 
FROM [pgl].[dbo].[KWT_DTL_KEB] 
GO 

UPDATE KWT_TARIF_IPL SET TIPE_TARIF_IPL = 1 
WHERE 
	KODE_TIPE LIKE '%BB%' OR KODE_TIPE LIKE '%BS%' 
GO 

-- ====================== KWT_POST_PEMBAYARAN ====================== 
TRUNCATE TABLE KWT_POST_PEMBAYARAN 
GO 
INSERT INTO KWT_POST_PEMBAYARAN 
( 
	USER_POST, 
	TGL_POST 
) 
SELECT 
	USER_POS AS USER_POST, 
	TGL_POS AS TGL_POST
FROM [pgl].[dbo].[KWT_HDR_POS_REALISASI] 
GO 

-- ====================== KWT_POST_FP ====================== 
TRUNCATE TABLE KWT_POST_FP 
GO 
INSERT INTO KWT_POST_FP 
( 
	USER_POST, 
	TGL_POST 
) 
SELECT 
	'DITO' AS USER_POST, 
	TANGGAL AS TGL_POST 
FROM [pgl].[dbo].[KWT_POSTING_FAKTUR_PAJAK] 
GO 

-- ====================== KWT_BANK ====================== 
TRUNCATE TABLE KWT_BANK 
GO 
INSERT INTO KWT_BANK 
( 
	KODE_BANK, 
	NAMA_BANK, 
	CABANG_BANK, 
	ALAMAT_BANK,
	COU_BD,
	COU_BDT 
) 
SELECT 
	KODE_BANK, 
	NAMA_BANK, 
	CB_BANK AS CABANG_BANK, 
	(ALAMAT_1 + ' ' + ALAMAT_2) AS ALAMAT_BANK,
	1,
	1
FROM [pgl].[dbo].[KWT_BANK] 
GO 

-- ====================== KWT_SEKTOR ====================== 
TRUNCATE TABLE KWT_SEKTOR 
GO 
INSERT INTO KWT_SEKTOR 
( 
	KODE_SEKTOR, 
	NAMA_SEKTOR, 
	KODE_PEL 
) 
SELECT 
	KODE_SEKTOR, 
	NAMA_SEKTOR, 
	KODE_PEL 
FROM [pgl].[dbo].[KWT_SEKTOR] 
GO 

-- ====================== KWT_CLUSTER ====================== 
TRUNCATE TABLE KWT_CLUSTER 
GO 
INSERT INTO KWT_CLUSTER 
( 
	KODE_CLUSTER, 
	KODE_SEKTOR, 
	NAMA_CLUSTER 
) 
SELECT 
	KODE_CLUSTER, 
	KODE_SEKTOR, 
	NAMA_CLUSTER 
FROM [pgl].[dbo].[KWT_CLUSTER] 
GO 

-- ====================== KWT_DISKON_KHUSUS ====================== 
TRUNCATE TABLE KWT_DISKON_KHUSUS 
GO 
INSERT INTO KWT_DISKON_KHUSUS 
( 
	KODE_BLOK, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	DISKON_AIR_NILAI, 
	DISKON_IPL_NILAI, 
	DISKON_AIR_PERSEN, 
	DISKON_IPL_PERSEN, 
	KET 
) 
SELECT 
	KODE_BLOK, 
	RIGHT(PERIODE_AWAL,4) + LEFT(PERIODE_AWAL,2) AS PERIODE_IPL_AWAL, 
	RIGHT(PERIODE_AKHIR,4) + LEFT(PERIODE_AKHIR,2) AS PERIODE_IPL_AKHIR, 
	ISNULL(DISKON_AIR_NILAI, 0) AS DISKON_AIR_NILAI, 
	ISNULL(DISKON_IPL_NILAI, 0) AS DISKON_IPL_NILAI, 
	ISNULL(DISKON_AIR_PERSEN, 0) AS DISKON_AIR_PERSEN, 
	ISNULL(DISKON_IPL_PERSEN, 0) AS DISKON_IPL_PERSEN, 
	KETERANGAN AS KET 
FROM [pgl].[dbo].[KWT_DISKON_KHUSUS] 
GO 

-- ====================== KWT_ZMB ====================== 
TRUNCATE TABLE KWT_ZMB 
GO 
INSERT INTO KWT_ZMB(KODE_ZONA,NAMA_ZONA) 
SELECT KODE_ZONA, NAMA_ZONA FROM [pgl].[dbo].[KWT_ZONA_METER_BALANCE] 
GO 

-- ====================== KWT_PEMBAYARAN_AI ====================== 
TRUNCATE TABLE KWT_PEMBAYARAN_AI 
GO 
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	KET_IVC, 
	
	PERIODE_TAG, 
	PERIODE_AIR, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	KODE_ZONA, 
	
	AKTIF_AIR, 
	AKTIF_IPL, 
	
	KEY_AIR, 
	KEY_IPL, 
	
	STAND_LALU, 
	STAND_ANGKAT, 
	STAND_AKHIR, 
	
	BLOK1, 
	BLOK2, 
	BLOK3, 
	BLOK4, 
	STAND_MIN_PAKAI, 
	TARIF1, 
	TARIF2, 
	TARIF3, 
	TARIF4, 
	TARIF_MIN_PAKAI, 
	
	LUAS_KAVLING, 
	TARIF_IPL, 
	
	JUMLAH_AIR, 
	ABONEMEN, 
	JUMLAH_IPL, 
	DENDA, 
	ADM, 
	JUMLAH_BAYAR, 
	
	DISKON_AIR, 
	TGL_DISKON_AIR, 
	USER_DISKON_AIR, 
	KET_DISKON_AIR, 
	
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL, 
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	STATUS_BAYAR, 
	NO_KWITANSI, 
	BAYAR_VIA, 
	CARA_BAYAR, 
	
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	USER_BAYAR, 
	KET_BAYAR, 
	
	STATUS_CETAK_KWT, 
	USER_CETAK_KWT, 
	TGL_CETAK_KWT, 
	
	STATUS_CETAK_IVC, 
	TGL_CETAK_IVC,
	
	STATUS_BATAL, 
	USER_BATAL, 
	TGL_BATAL, 
	KET_BATAL, 
	
	STATUS_POST_PB, 
	STATUS_POST_BD, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE
) 
SELECT 
	'3#' + RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) + '#' + b.NO_PELANGGAN AS ID_PEMBAYARAN, 
	3 AS TRX, 
	
	NULL AS NO_INVOICE, 
	NULL AS TGL_JATUH_TEMPO, 
	NULL AS KET_IVC, 
	
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_TAG, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_AIR, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_IPL_AWAL, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_IPL_AKHIR, 
	1 AS JUMLAH_PERIODE_IPL,
	
	b.NO_PELANGGAN AS NO_PELANGGAN, 
	
	b.KODE_SEKTOR AS KODE_SEKTOR, 
	b.KODE_CLUSTER AS KODE_CLUSTER, 
	b.KODE_BLOK AS KODE_BLOK, 
	3 AS STATUS_BLOK, 
	
	b.KODE_ZONA AS KODE_ZONA, 
	
	1 AS AKTIF_AIR, 
	1 AS AKTIF_IPL,
	
	b.KEY_AIR AS KEY_AIR, 
	b.KEY_KEB AS KEY_IPL, 
	
	ISNULL(b.STAND_LALU, 0) AS STAND_LALU, 
	ISNULL(b.STAND_ANGKAT, 0) AS STAND_ANGKAT, 
	ISNULL(b.STAND_AKHIR, 0) AS STAND_AKHIR, 
	
	ISNULL(b.BLOK1, 0) AS BLOK1, 
	ISNULL(b.BLOK2, 0) AS BLOK2, 
	ISNULL(b.BLOK3, 0) AS BLOK3, 
	ISNULL(b.BLOK4, 0) AS BLOK4,
	
	ISNULL(b.STAND_MIN_PAKAI, 0) AS STAND_MIN_PAKAI, 
	ISNULL(b.TARIP1, 0) AS TARIF1, 
	ISNULL(b.TARIP2, 0) AS TARIF2, 
	ISNULL(b.TARIP3, 0) AS TARIF3, 
	ISNULL(b.TARIP4, 0) AS TARIF4, 
	ISNULL(b.TARIP_MIN_PAKAI, 0) AS TARIF_MIN_PAKAI, 
	
	ISNULL(p.LUAS_KAVLING, 0) AS LUAS_KAVLING, 
	ISNULL(i.TARIF_IPL, 0) AS TARIF_IPL, 
	
	ISNULL(b.JUMLAH_AIR, 0) AS JUMLAH_AIR, 
	ISNULL(b.ABONEMEN, 0) AS ABONEMEN, 
	ISNULL(b.NILAI_SAMPAH, 0) AS JUMLAH_IPL, 
	ISNULL(b.DENDA, 0) AS DENDA, 
	ISNULL(b.ADMINISTRASI, 0) AS ADM, 
	ISNULL(b.JUMLAH_BAYAR, 0) AS JUMLAH_BAYAR, 
	
	ISNULL(b.DISC_RUPIAH, 0) AS DISKON_AIR, 
	b.TGL_DISC AS TGL_DISKON_AIR, 
	b.USER_DISC AS USER_DISKON_AIR, 
	b.KET_DISCOUNT AS KET_DISKON_AIR, 
	
	ISNULL(b.DISC_RUPIAH_IPL, 0) AS DISKON_IPL, 
	b.TGL_DISC_IPL AS TGL_DISKON_IPL, 
	b.USER_DISC_IPL AS USER_DISKON_IPL, 
	b.KET_DISCOUNT AS KET_DISKON_IPL, 
	
	ISNULL(b.PROSEN_PPN, 10) AS PERSEN_PPN, 
	ISNULL(b.NILAI_PPN, 0) AS NILAI_PPN,
	
	(CASE WHEN b.STATUS_BAYAR = '2' THEN 1 ELSE 0 END) AS STATUS_BAYAR,
	b.NO_KWITANSI AS NO_KWITANSI, 
	b.BAYAR_MELALUI AS BAYAR_VIA, 
	(CASE WHEN ISNUMERIC(b.JENIS_BAYAR) = 1 THEN b.JENIS_BAYAR ELSE 0 END) AS CARA_BAYAR,
	
	b.TGL_BAYAR AS TGL_BAYAR_BANK, 
	b.TGL_TERIMA_BANK AS TGL_BAYAR_SYS,
	b.KASIR AS USER_BAYAR, 
	b.KETERANGAN AS KET_BAYAR, 
	
	ISNULL(b.JUMLAH_CETAK, 0) AS STATUS_CETAK_KWT, 
	(CASE WHEN b.JUMLAH_CETAK = '1' THEN b.KASIR END) AS USER_CETAK_KWT, 
	(CASE WHEN b.JUMLAH_CETAK = '1' THEN b.TGL_TERIMA_BANK END) AS TGL_CETAK_KWT, 
	
	0 AS STATUS_CETAK_IVC, 
	NULL AS TGL_CETAK_IVC, 
	
	ISNULL(b.STATUS_BATAL, 0) AS STATUS_BATAL,
	b.USER_BATAL AS USER_BATAL, 
	b.TGL_BATAL AS TGL_BATAL, 
	NULL AS KET_BATAL, 
	
	ISNULL(b.STATUS_POS, 0) AS STATUS_POST_PB, 
	0 AS STATUS_POST_BD, 
	
	b.NO_FAKTUR_PAJAK AS NO_FP, 
	b.TGL_FAKTUR_PAJAK AS TGL_FP, 
	b.TGL_POSTING_FAKTUR_PAJAK AS TGL_POST_FP, 
	
	b.USER_EDIT AS USER_MODIFIED, 
	b.TGL_EDIT AS MODIFIED_DATE,
	'1' AS USER_CREATED, 
	GETDATE() AS CREATED_DATE
	
FROM 
	[pgl].[dbo].[KWT_PEMBAYARAN] b 
	LEFT JOIN KWT_PELANGGAN p ON b.NO_PELANGGAN = p.NO_PELANGGAN 
	LEFT JOIN KWT_TARIF_IPL i ON b.KEY_KEB = i.KEY_IPL 
	LEFT JOIN KWT_TIPE_IPL t ON i.KODE_TIPE = t.KODE_TIPE 
GO 

-- ================================== NON AKTIF ==================================
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	KET_IVC, 
	
	PERIODE_TAG, 
	PERIODE_AIR, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	KODE_ZONA, 
	
	AKTIF_AIR, 
	AKTIF_IPL, 
	
	KEY_AIR, 
	KEY_IPL, 
	
	STAND_LALU, 
	STAND_ANGKAT, 
	STAND_AKHIR, 
	
	BLOK1, 
	BLOK2, 
	BLOK3, 
	BLOK4, 
	STAND_MIN_PAKAI, 
	TARIF1, 
	TARIF2, 
	TARIF3, 
	TARIF4, 
	TARIF_MIN_PAKAI, 
	
	LUAS_KAVLING, 
	TARIF_IPL, 
	
	JUMLAH_AIR, 
	ABONEMEN, 
	JUMLAH_IPL, 
	DENDA, 
	ADM, 
	JUMLAH_BAYAR, 
	
	DISKON_AIR, 
	TGL_DISKON_AIR, 
	USER_DISKON_AIR, 
	KET_DISKON_AIR, 
	
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL, 
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	STATUS_BAYAR, 
	NO_KWITANSI, 
	BAYAR_VIA, 
	CARA_BAYAR, 
	
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	USER_BAYAR, 
	KET_BAYAR, 
	
	STATUS_CETAK_KWT, 
	USER_CETAK_KWT, 
	TGL_CETAK_KWT, 
	
	STATUS_CETAK_IVC, 
	TGL_CETAK_IVC,
	
	STATUS_BATAL, 
	USER_BATAL, 
	TGL_BATAL, 
	KET_BATAL, 
	
	STATUS_POST_PB, 
	STATUS_POST_BD, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE
) 
SELECT 
	'3#' + RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) + '#' + b.NO_PELANGGAN AS ID_PEMBAYARAN, 
	3 AS TRX, 
	
	NULL AS NO_INVOICE, 
	NULL AS TGL_JATUH_TEMPO, 
	NULL AS KET_IVC, 
	
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_TAG, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_AIR, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_IPL_AWAL, 
	RIGHT(b.PERIODE,4) + LEFT(b.PERIODE,2) AS PERIODE_IPL_AKHIR, 
	1 AS JUMLAH_PERIODE_IPL, 
	
	b.NO_PELANGGAN AS NO_PELANGGAN, 
	
	b.KODE_SEKTOR AS KODE_SEKTOR, 
	b.KODE_CLUSTER AS KODE_CLUSTER, 
	b.KODE_BLOK AS KODE_BLOK, 
	3 AS STATUS_BLOK, 
	
	b.KODE_ZONA AS KODE_ZONA, 
	
	1 AS AKTIF_AIR, 
	1 AS AKTIF_IPL,
	
	b.KEY_AIR AS KEY_AIR, 
	b.KEY_KEB AS KEY_IPL, 
	
	ISNULL(b.STAND_LALU, 0) AS STAND_LALU, 
	ISNULL(b.STAND_ANGKAT, 0) AS STAND_ANGKAT, 
	ISNULL(b.STAND_AKHIR, 0) AS STAND_AKHIR, 
	
	ISNULL(b.BLOK1, 0) AS BLOK1, 
	ISNULL(b.BLOK2, 0) AS BLOK2, 
	ISNULL(b.BLOK3, 0) AS BLOK3, 
	ISNULL(b.BLOK4, 0) AS BLOK4,
	
	ISNULL(b.STAND_MIN_PAKAI, 0) AS STAND_MIN_PAKAI, 
	ISNULL(b.TARIP1, 0) AS TARIF1, 
	ISNULL(b.TARIP2, 0) AS TARIF2, 
	ISNULL(b.TARIP3, 0) AS TARIF3, 
	ISNULL(b.TARIP4, 0) AS TARIF4, 
	ISNULL(b.TARIP_MIN_PAKAI, 0) AS TARIF_MIN_PAKAI, 
	
	ISNULL(p.LUAS_KAVLING, 0) AS LUAS_KAVLING, 
	ISNULL(i.TARIF_IPL, 0) AS TARIF_IPL, 
	
	ISNULL(b.JUMLAH_AIR, 0) AS JUMLAH_AIR, 
	ISNULL(b.ABONEMEN, 0) AS ABONEMEN, 
	ISNULL(b.NILAI_SAMPAH, 0) AS JUMLAH_IPL, 
	ISNULL(b.DENDA, 0) AS DENDA, 
	ISNULL(b.ADMINISTRASI, 0) AS ADM, 
	ISNULL(b.JUMLAH_BAYAR, 0) AS JUMLAH_BAYAR, 
	
	ISNULL(b.DISC_RUPIAH, 0) AS DISKON_AIR, 
	b.TGL_DISC AS TGL_DISKON_AIR, 
	b.USER_DISC AS USER_DISKON_AIR, 
	b.KET_DISCOUNT AS KET_DISKON_AIR, 
	
	ISNULL(b.DISC_RUPIAH_IPL, 0) AS DISKON_IPL, 
	b.TGL_DISC_IPL AS TGL_DISKON_IPL, 
	b.USER_DISC_IPL AS USER_DISKON_IPL, 
	b.KET_DISCOUNT AS KET_DISKON_IPL, 
	
	ISNULL(b.PROSEN_PPN, 10) AS PERSEN_PPN, 
	ISNULL(b.NILAI_PPN, 0) AS NILAI_PPN,
	
	(CASE WHEN b.STATUS_BAYAR = '2' THEN 1 ELSE 0 END) AS STATUS_BAYAR,
	b.NO_KWITANSI AS NO_KWITANSI, 
	b.BAYAR_MELALUI AS BAYAR_VIA, 
	(CASE WHEN ISNUMERIC(b.JENIS_BAYAR) = 1 THEN b.JENIS_BAYAR ELSE 0 END) AS CARA_BAYAR,
	
	b.TGL_BAYAR AS TGL_BAYAR_BANK, 
	b.TGL_TERIMA_BANK AS TGL_BAYAR_SYS,
	b.KASIR AS USER_BAYAR, 
	b.KETERANGAN AS KET_BAYAR, 
	
	ISNULL(b.JUMLAH_CETAK, 0) AS STATUS_CETAK_KWT, 
	(CASE WHEN b.JUMLAH_CETAK = '1' THEN b.KASIR END) AS USER_CETAK_KWT, 
	(CASE WHEN b.JUMLAH_CETAK = '1' THEN b.TGL_TERIMA_BANK END) AS TGL_CETAK_KWT, 
	
	0 AS STATUS_CETAK_IVC, 
	NULL AS TGL_CETAK_IVC, 
	
	ISNULL(b.STATUS_BATAL, 0) AS STATUS_BATAL,
	b.USER_BATAL AS USER_BATAL, 
	b.TGL_BATAL AS TGL_BATAL, 
	NULL AS KET_BATAL, 
	
	ISNULL(b.STATUS_POS, 0) AS STATUS_POST_PB, 
	0 AS STATUS_POST_BD, 
	
	b.NO_FAKTUR_PAJAK AS NO_FP, 
	b.TGL_FAKTUR_PAJAK AS TGL_FP, 
	b.TGL_POSTING_FAKTUR_PAJAK AS TGL_POST_FP, 
	
	b.USER_EDIT AS USER_MODIFIED, 
	b.TGL_EDIT AS MODIFIED_DATE,
	'1' AS USER_CREATED, 
	GETDATE() AS CREATED_DATE
	
FROM 
	[pgl].[dbo].[KWT_PEMBAYARAN_PEL_NON_AKTIF] b 
	LEFT JOIN KWT_PELANGGAN p ON b.NO_PELANGGAN = p.NO_PELANGGAN 
	LEFT JOIN KWT_TARIF_IPL i ON b.KEY_KEB = i.KEY_IPL 
	LEFT JOIN KWT_TIPE_IPL t ON i.KODE_TIPE = t.KODE_TIPE 
GO 



--===================== UPDATE KWT_PEMBAYARAN HUNIAN 
UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = NULL WHERE USER_BAYAR = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_CETAK_KWT = NULL WHERE USER_CETAK_KWT = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_DISKON_AIR = NULL WHERE USER_DISKON_AIR = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_DISKON_IPL = NULL WHERE USER_DISKON_IPL = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_BATAL = NULL WHERE USER_BATAL = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_MODIFIED = NULL WHERE USER_MODIFIED = '-'
UPDATE KWT_PEMBAYARAN_AI SET USER_CREATED = NULL WHERE USER_CREATED = '-'

UPDATE KWT_PEMBAYARAN_AI SET AKTIF_AIR = 0 WHERE ABONEMEN <= 0 
UPDATE KWT_PEMBAYARAN_AI SET AKTIF_IPL = 0 WHERE JUMLAH_IPL <= 0 
UPDATE KWT_PEMBAYARAN_AI SET PERSEN_PPN = 10 WHERE PERSEN_PPN = 0 
UPDATE KWT_PEMBAYARAN_AI SET CARA_BAYAR = 4 WHERE STATUS_BAYAR = 1 AND CARA_BAYAR = 0 
GO 

UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = 'VIRTUAL ACCOUNT'
WHERE 
	STATUS_BAYAR = 1 
	AND USER_MODIFIED = 'VIRTUAL ACCOUNT'
GO 

UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = 'AUTODEBET'
WHERE 
	STATUS_BAYAR = 1 
	AND USER_MODIFIED IS NULL 
	AND USER_BAYAR IS NULL
GO 

UPDATE KWT_PEMBAYARAN_AI 
SET KEY_AIR = dbo.ETN(dbo.TRIM(KEY_AIR)), 
	KEY_IPL = dbo.ETN(dbo.TRIM(KEY_IPL)),
	PERIODE_TAG = CONVERT(VARCHAR(6), DATEADD(MONTH, 1, CAST(PERIODE_TAG + '01' AS DATE)), 112), 
	JUMLAH_AIR = (
		(BLOK1 * TARIF1) + (BLOK2 * TARIF2) + 
		(BLOK3 * TARIF3) + (BLOK4 * TARIF4) + 
		(STAND_MIN_PAKAI * TARIF_MIN_PAKAI)
	)	
GO 
UPDATE KWT_PEMBAYARAN_AI 
SET	ID_PEMBAYARAN = '3#' + PERIODE_TAG + '#' + NO_PELANGGAN, 
	TGL_JATUH_TEMPO = CAST(PERIODE_TAG + '25' AS DATE),
	CREATED_DATE = CAST(PERIODE_TAG + '06' AS DATE) 
GO 

UPDATE KWT_PEMBAYARAN_AI 
SET JUMLAH_BAYAR = (
	JUMLAH_AIR + ABONEMEN + 
	JUMLAH_IPL + ADM + DENDA - 
	DISKON_AIR - DISKON_IPL
)
WHERE 
	STATUS_BAYAR = 1 
GO 

UPDATE KWT_PEMBAYARAN_AI 
SET PERIODE_IPL_AWAL = NULL, 
	PERIODE_IPL_AKHIR = NULL, 
	JUMLAH_PERIODE_IPL = 0 
WHERE AKTIF_IPL = 0 
GO 





-- ====================== IPL ====================== 
-- UPDATE KODE_SK
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '014' WHERE IUAFD_SK = 'SK2014'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '013' WHERE IUAFD_SK = 'SK2013'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '012' WHERE 
	IUAFD_SK = '649/JRP/DIR/PKB/XI/2011'
	OR IUAFD_SK = '651/JRP/DIR/PKB/XI/2011'
	OR IUAFD_SK = '652/JRP/DIR/PKB/XI/2011'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '011' WHERE 
	IUAFD_SK = '051/JRP/DIR/PKB/XI/2010'
	OR IUAFD_SK = '052/JRP/DIR/PKB/XI/2010'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '010' WHERE 
	IUAFD_SK = 'SK 2010'
	OR IUAFD_SK = '049/JRP/DIR/PKB/XI/2010'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '009' WHERE 
	IUAFD_SK = 'SK 2009'
	OR IUAFD_SK = '039/JRP/DIR/PKB/XII/2009'
	OR IUAFD_SK = '040/JRP/DIR/PKB/XII/2009'
	OR IUAFD_SK = '042/JRP/DIR/PKB/XII/2009'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '007' WHERE IUAFD_SK = 'SK Juni 2007 - Desember 2008'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '006' WHERE IUAFD_SK = 'SK APRIL 2006 - MEI 2007'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '000' WHERE IUAFD_SK = 'SK 2000 - MARET 2006'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '095' WHERE IUAFD_SK = 'SK 1995 - 1999'
UPDATE [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] SET IUAFD_SK = '094' WHERE IUAFD_SK = 'SK < 1995'
GO

-- SK IPL
INSERT INTO KWT_SK_IPL 
( 
	KODE_SK, 
	NO_SK, 
	TGL_SK, 
	TGL_BERLAKU, 
	PEMBUAT, 
	STATUS_SK, 
	KET 
) 
SELECT 
	DISTINCT d.IUAFD_SK AS KODE_SK, 
	d.IUAFD_SK AS NO_SK, 
	NULL AS TGL_SK, 
	NULL AS TGL_BERLAKU, 
	NULL AS PEMBUAT, 
	0 STATUS_SK, 
	NULL AS KET 
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d 
WHERE 
	d.IUAFD_SK NOT IN (SELECT KODE_SK FROM KWT_SK_IPL) 
GO 

-- TIPE IPL
-- ======= CEK_DOUBLE_KEY_IPL 
SELECT (IUAFD_SK + '#' + CAST(IUAFD_AREA_CLASS_ID AS VARCHAR)) AS CEK_DOUBLE_KEY_IPL
FROM [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL]
GROUP BY (IUAFD_SK + '#' + CAST(IUAFD_AREA_CLASS_ID AS VARCHAR))
HAVING COUNT((IUAFD_SK + '#' + CAST(IUAFD_AREA_CLASS_ID AS VARCHAR))) > 1


-- ======= KWT_TIPE_IPL 
DELETE FROM KWT_TIPE_IPL WHERE STATUS_BLOK = 1 
GO 
INSERT INTO KWT_TIPE_IPL 
( 
	KODE_TIPE, 
	NAMA_TIPE, 
	STATUS_BLOK 
) 
SELECT 
	REPLACE(c.IUAC_CODE, ' ', '-') AS KODE_TIPE, 
	c.IUAC_NAME AS NAMA_TIPE, 
	1 AS STATUS_BLOK
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE] f ON d.IUAFD_FEE_ID = f.IUAF_ID
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] c ON d.IUAFD_AREA_CLASS_ID = c.IUAC_ID
WHERE 
	f.IUAF_ID = 1
GROUP BY c.IUAC_CODE, c.IUAC_NAME
ORDER BY c.IUAC_CODE
GO 

-- ======= KWT_TARIF_IPL 
DELETE FROM KWT_TARIF_IPL 
WHERE KODE_TIPE IN ( 
	SELECT KODE_TIPE 
	FROM KWT_TIPE_IPL 
	WHERE STATUS_BLOK = 1 
) 
GO 

INSERT INTO KWT_TARIF_IPL 
( 
	KEY_IPL, 
	KODE_SK, 
	KODE_TIPE, 
	TIPE_TARIF_IPL, 
	TARIF_IPL, 
	NILAI_DEPOSIT, 
	KET 
) 
SELECT 
	(d.IUAFD_SK + '-' + REPLACE(c.IUAC_CODE, ' ', '-')) AS KEY_IPL, 
	d.IUAFD_SK AS KODE_SK, 
	REPLACE(c.IUAC_CODE, ' ', '-') AS KODE_TIPE, 
	1 AS TIPE_TARIF_IPL, 
	d.IUAFD_TOT_VALUE AS TARIF_IPL, 
	0 AS NILAI_DEPOSIT, 
	c.IUAC_NAME AS KET 
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] c ON d.IUAFD_AREA_CLASS_ID = c.IUAC_ID 
WHERE 
	d.IUAFD_FEE_ID = 1
ORDER BY KEY_IPL ASC 
GO 

-- ====================== KWT_PEMBAYARAN_AI ====================== 
DELETE FROM KWT_PEMBAYARAN_AI WHERE TRX = 1 
GO 
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	
	PERIODE_TAG, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	AKTIF_IPL, 

	LUAS_KAVLING, 
	TARIF_IPL, 
	
	NO_KWITANSI, 
	USER_BAYAR,
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	KET_BAYAR, 
	
	JUMLAH_IPL, 
	ADM, 
	JUMLAH_BAYAR, 
	
	--DISKON_PERSEN_IPL, 
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL,
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	STATUS_BAYAR, 
	
	KET_IVC, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE, 
	
	ID_TEMP 
) 
SELECT 
	('1#' + CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) + '#' + a.IUA_CODE) AS ID_PEMBAYARAN, 
	1 AS TRX, 
	i.IUI_NO AS NO_INVOICE, 
	i.IUI_DUE AS TGL_JATUH_TEMPO, 
	
	CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) AS PERIODE_TAG, 
	
	CONVERT(VARCHAR(6),i.IUI_START_PERIOD,112) AS PERIODE_IPL_AWAL, 
	CONVERT(VARCHAR(6),i.IUI_END_PERIOD,112) AS PERIODE_IPL_AKHIR, 
	DATEDIFF(MONTH, i.IUI_START_PERIOD, i.IUI_END_PERIOD) + 1 AS JUMLAH_PERIODE_IPL, 
	
	a.IUA_CODE AS NO_PELANGGAN, 
	
	a.IUA_SECTOR_ID AS KODE_SEKTOR, 
	a.IUA_CLUSTER_ID AS KODE_CLUSTER, 
	a.IUA_CODE AS KODE_BLOK, 
	1 AS STATUS_BLOK, 
	
	1 AS AKTIF_IPL, 

	i.IUI_AREA_SQUARE AS LUAS_KAVLING, 
	i.IUI_UNIT_PRICE AS TARIF_IPL, 
	
	r.IUR_NO AS NO_KWITANSI, 
	UPPER(k.CUSR_NAME) AS USER_BAYAR, 
	r.IUR_PAYMENT_DATE AS TGL_BAYAR_BANK, 
	r.IUR_CREATED AS TGL_BAYAR_SYS, 
	r.IUR_DESC AS KET_BAYAR, 
	
	i.IUI_TOTAL_PRICE AS JUMLAH_IPL, 
	i.IUI_ADM AS ADM, 
	(CASE WHEN r.IUR_ID IS NULL THEN 0 ELSE i.IUI_TOTAL_PAYMENT END) AS JUMLAH_BAYAR, 
	
	i.IUI_DISC AS DISKON_IPL, 
	i.IUI_REVISED_DATE AS TGL_DISKON_IPL, 
	(CASE WHEN i.IUI_DISC > 0 THEN 'SYSTEM' END) AS USER_DISKON_IPL, 
	i.IUI_REVISED_DESC AS KET_DISKON_IPL, 
	
	(CASE WHEN i.IUI_PPN_PERSEN = 0 THEN 10 ELSE i.IUI_PPN_PERSEN END) AS PERSEN_PPN, 
	i.IUI_PPN AS NILAI_PPN, 
	
	i.SUI_TAX_NO AS NO_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_POST_FP, 
	(CASE WHEN r.IUR_ID IS NOT NULL THEN 1 ELSE 0 END) AS STATUS_BAYAR, 
	
	i.IUI_DESC AS KET_IVC, 
	
	m.CUSR_ID AS USER_MODIFIED, 
	i.IUI_LAST_MODIFIED AS MODIFIED_DATE, 
	c.CUSR_ID AS USER_CREATED, 
	i.IUI_CREATED AS CREATED_DATE, 
	
	a.IUA_ID AS ID_TEMP 
	
FROM 
	[pgl].[dbo].[IPL_UNIT_INVOICE] i 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] o ON i.IUI_OCCUPIED_ID = o.IUAO_ID 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA] a ON o.IUAO_AREA_ID = a.IUA_ID 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_RECEIPT] r ON i.IUI_ID = r.IUR_INVOICE_ID 
	
	LEFT JOIN [pgl].[dbo].[CLASP_USER] k ON r.IUR_CASHIER_ID = k.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] m ON i.IUI_OP_MODIFIED = m.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] c ON i.IUI_OP_CREATED = c.CUSR_ID 
WHERE 
	i.IUI_INVOICETYPE_ID = 1 AND 
	(
		(
			i.IUI_YEAR = 2014 AND 
			1 = ( 
				CASE WHEN r.IUR_IS_CANCELED = 'Y' THEN 0 ELSE 1 END 
			) 
		)
		OR
		(
			i.IUI_YEAR != 2014 AND 
			r.IUR_INVOICE_ID IS NULL
		)
	) 

	--/*
	AND IUI_ID != 126286 --PR/PB7A-09-10 01-2012 DIBATALKAN
	AND IUI_ID != 126283 --PR/PB7A-09-10 01-2012 DIBATALKAN
	AND IUI_ID != 141155 --B3/CK-01 04-2014 DENGAN ID 143371
	AND IUI_ID != 143375 --B3/CK-10 04-2014 DENGAN ID 134250
	AND IUI_ID != 144116 --MP/B7-08 04-2014 DENGAN ID 146460 
	--*/

ORDER BY i.IUI_MONTH ASC 
GO 


-- ====================== IPL ====================== 
-- ======= KWT_TIPE_IPL 
DELETE FROM KWT_TIPE_IPL WHERE STATUS_BLOK = 2 
GO 
INSERT INTO KWT_TIPE_IPL 
( 
	KODE_TIPE, 
	NAMA_TIPE, 
	STATUS_BLOK 
) 
SELECT 
	REPLACE(c.IUAC_CODE, ' ', '-') AS KODE_TIPE, 
	c.IUAC_NAME AS NAMA_TIPE, 
	2 AS STATUS_BLOK
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE] f ON d.IUAFD_FEE_ID = f.IUAF_ID
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] c ON d.IUAFD_AREA_CLASS_ID = c.IUAC_ID
WHERE 
	f.IUAF_ID = 2
GROUP BY c.IUAC_CODE, c.IUAC_NAME
ORDER BY c.IUAC_CODE
GO 

-- ======= KWT_TARIF_IPL 
DELETE FROM KWT_TARIF_IPL 
WHERE KODE_TIPE IN ( 
	SELECT KODE_TIPE 
	FROM KWT_TIPE_IPL 
	WHERE STATUS_BLOK = 2 
) 
GO 

INSERT INTO KWT_TARIF_IPL 
( 
	KEY_IPL, 
	KODE_SK, 
	KODE_TIPE, 
	TIPE_TARIF_IPL, 
	TARIF_IPL, -- UNTUK PROSES DENDA (0 = STANDAR) (1 = BISNIS) 
	NILAI_DEPOSIT, 
	KET 
) 
SELECT 
	(d.IUAFD_SK + '-' + REPLACE(c.IUAC_CODE, ' ', '-')) AS KEY_IPL, 
	d.IUAFD_SK AS KODE_SK, 
	REPLACE(c.IUAC_CODE, ' ', '-') AS KODE_TIPE, 
	1 AS TIPE_TARIF_IPL, 
	d.IUAFD_TOT_VALUE AS TARIF_IPL, 
	0 AS NILAI_DEPOSIT, 
	c.IUAC_NAME AS KET 
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] c ON d.IUAFD_AREA_CLASS_ID = c.IUAC_ID 
WHERE 
	d.IUAFD_FEE_ID = 2
ORDER BY KEY_IPL ASC 
GO 

-- ====================== KWT_PEMBAYARAN_AI ====================== 
DELETE FROM KWT_PEMBAYARAN_AI WHERE TRX = 2 
GO 
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	
	PERIODE_TAG, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	AKTIF_IPL, 

	LUAS_KAVLING, 
	TARIF_IPL, 
	
	NO_KWITANSI, 
	USER_BAYAR,
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	KET_BAYAR, 
	
	JUMLAH_IPL, 
	ADM, 
	JUMLAH_BAYAR, 
	
	--DISKON_PERSEN_IPL, 
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL,
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	STATUS_BAYAR, 
	
	KET_IVC, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE, 
	
	ID_TEMP 
) 
SELECT 
	('2#' + CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) + '#' + a.IUA_CODE) AS ID_PEMBAYARAN, 
	2 AS TRX, 
	i.IUI_NO AS NO_INVOICE, 
	i.IUI_DUE AS TGL_JATUH_TEMPO, 
	
	CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) AS PERIODE_TAG, 
	
	CONVERT(VARCHAR(6),i.IUI_START_PERIOD,112) AS PERIODE_IPL_AWAL, 
	CONVERT(VARCHAR(6),i.IUI_END_PERIOD,112) AS PERIODE_IPL_AKHIR, 
	DATEDIFF(MONTH, i.IUI_START_PERIOD, i.IUI_END_PERIOD) + 1 AS JUMLAH_PERIODE_IPL, 
	
	a.IUA_CODE AS NO_PELANGGAN, 
	
	a.IUA_SECTOR_ID AS KODE_SEKTOR, 
	a.IUA_CLUSTER_ID AS KODE_CLUSTER, 
	a.IUA_CODE AS KODE_BLOK, 
	2 AS STATUS_BLOK, 
	
	1 AS AKTIF_IPL, 

	i.IUI_AREA_SQUARE AS LUAS_KAVLING, 
	i.IUI_UNIT_PRICE AS TARIF_IPL, 
	
	r.IUR_NO AS NO_KWITANSI, 
	UPPER(k.CUSR_NAME) AS USER_BAYAR, 
	r.IUR_PAYMENT_DATE AS TGL_BAYAR_BANK, 
	r.IUR_CREATED AS TGL_BAYAR_SYS, 
	r.IUR_DESC AS KET_BAYAR, 
	
	i.IUI_TOTAL_PRICE AS JUMLAH_IPL, 
	i.IUI_ADM AS ADM, 
	(CASE WHEN r.IUR_ID IS NULL THEN 0 ELSE i.IUI_TOTAL_PAYMENT END) AS JUMLAH_BAYAR, 
	
	i.IUI_DISC AS DISKON_IPL, 
	i.IUI_REVISED_DATE AS TGL_DISKON_IPL, 
	(CASE WHEN i.IUI_DISC > 0 THEN 'SYSTEM' END) AS USER_DISKON_IPL, 
	i.IUI_REVISED_DESC AS KET_DISKON_IPL, 
	
	(CASE WHEN i.IUI_PPN_PERSEN = 0 THEN 10 ELSE i.IUI_PPN_PERSEN END) AS PERSEN_PPN, 
	i.IUI_PPN AS NILAI_PPN, 
	
	i.SUI_TAX_NO AS NO_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_POST_FP, 
	(CASE WHEN r.IUR_ID IS NOT NULL THEN 1 ELSE 0 END) AS STATUS_BAYAR, 
	
	i.IUI_DESC AS KET_IVC, 
	
	m.CUSR_ID AS USER_MODIFIED, 
	i.IUI_LAST_MODIFIED AS MODIFIED_DATE, 
	c.CUSR_ID AS USER_CREATED, 
	i.IUI_CREATED AS CREATED_DATE, 
	
	a.IUA_ID AS ID_TEMP 
	
FROM 
	[pgl].[dbo].[IPL_UNIT_INVOICE] i 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] o ON i.IUI_OCCUPIED_ID = o.IUAO_ID 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA] a ON o.IUAO_AREA_ID = a.IUA_ID 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_RECEIPT] r ON i.IUI_ID = r.IUR_INVOICE_ID 
	
	LEFT JOIN [pgl].[dbo].[CLASP_USER] k ON r.IUR_CASHIER_ID = k.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] m ON i.IUI_OP_MODIFIED = m.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] c ON i.IUI_OP_CREATED = c.CUSR_ID 
WHERE 
i.IUI_INVOICETYPE_ID = 2 AND 
(
		(
			i.IUI_YEAR = 2014 AND 
			1 = ( 
				CASE WHEN r.IUR_IS_CANCELED = 'Y' THEN 0 ELSE 1 END 
			) 
		)
		OR
		(
			i.IUI_YEAR != 2014 AND 
			r.IUR_INVOICE_ID IS NULL
		)
	)
	
	--/*
	AND IUI_ID != 121535 --EB/AA2-19 01-2013 DIBATALKAN
	AND IUI_ID != 121534 --EB/AA2-19 01-2013 DIBATALKAN 
	--*/
	
ORDER BY i.IUI_MONTH ASC 
GO 


-- ====================== IPL ====================== 
DECLARE 
@nilai_deposit NUMERIC(25), 
@key_ipl VARCHAR(100)
	
DECLARE cur_dp CURSOR FOR 
SELECT 
	(d.IUAFD_SK + '-' + REPLACE(c.IUAC_CODE, ' ', '-')) AS KEY_IPL, 
	d.IUAFD_TOT_VALUE AS NILAI_DEPOSIT
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] d 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] c ON d.IUAFD_AREA_CLASS_ID = c.IUAC_ID 
WHERE 
	d.IUAFD_FEE_ID = 3
	
OPEN cur_dp 
FETCH NEXT FROM cur_dp INTO @key_ipl, @nilai_deposit 

WHILE @@FETCH_STATUS = 0 
BEGIN 
	UPDATE KWT_TARIF_IPL SET NILAI_DEPOSIT = @nilai_deposit WHERE KEY_IPL LIKE '%'+ @key_ipl +'%' 
	
	FETCH NEXT FROM cur_dp INTO @key_ipl, @nilai_deposit 
END 

CLOSE cur_dp 
DEALLOCATE cur_dp 
GO 

-- ======= KWT_TARIF_IPL 
UPDATE KWT_TARIF_IPL SET NILAI_DEPOSIT = 0 
WHERE KODE_TIPE IN ( 
	SELECT KODE_TIPE FROM KWT_TIPE_IPL WHERE 
	STATUS_BLOK = 1 OR 
	STATUS_BLOK = 3 
) 
GO 

-- ====================== KWT_PEMBAYARAN_AI ====================== 
DELETE FROM KWT_PEMBAYARAN_AI WHERE TRX = 7 
GO 
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	
	PERIODE_TAG, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	AKTIF_IPL, 
	
	LUAS_KAVLING, 
	
	NO_KWITANSI, 
	USER_BAYAR,
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	KET_BAYAR, 
	
	JUMLAH_IPL, 
	ADM, 
	JUMLAH_BAYAR, 
	
	--DISKON_PERSEN_IPL, 
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL, 
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	STATUS_BAYAR, 
	
	KET_IVC, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE, 
	
	ID_TEMP 
) 
SELECT 
	('7#' + CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) + '#' + a.IUA_CODE) AS ID_PEMBAYARAN, 
	7 AS TRX, 
	i.IUI_NO AS NO_INVOICE, 
	i.IUI_DUE AS TGL_JATUH_TEMPO, 
	
	CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) AS PERIODE_TAG, 
	
	CONVERT(VARCHAR(6),i.IUI_START_PERIOD,112) AS PERIODE_IPL_AWAL, 
	CONVERT(VARCHAR(6),i.IUI_END_PERIOD,112) AS PERIODE_IPL_AKHIR, 
	DATEDIFF(MONTH, i.IUI_START_PERIOD, i.IUI_END_PERIOD) + 1 AS JUMLAH_PERIODE_IPL, 
	
	a.IUA_CODE AS NO_PELANGGAN, 
	
	a.IUA_SECTOR_ID AS KODE_SEKTOR, 
	a.IUA_CLUSTER_ID AS KODE_CLUSTER, 
	a.IUA_CODE AS KODE_BLOK, 
	2 AS STATUS_BLOK, 
	
	1 AS AKTIF_IPL, 
	
	i.IUI_AREA_SQUARE AS LUAS_KAVLING, 
	
	r.IUR_NO AS NO_KWITANSI, 
	UPPER(k.CUSR_NAME) AS USER_BAYAR, 
	r.IUR_PAYMENT_DATE AS TGL_BAYAR_BANK, 
	r.IUR_CREATED AS TGL_BAYAR_SYS, 
	r.IUR_DESC AS KET_BAYAR, 
	
	i.IUI_TOTAL_PRICE AS JUMLAH_IPL, 
	i.IUI_ADM AS ADM, 
	(CASE WHEN r.IUR_ID IS NULL THEN 0 ELSE i.IUI_TOTAL_PAYMENT END) AS JUMLAH_BAYAR, 
	
	i.IUI_DISC AS DISKON_IPL, 
	i.IUI_REVISED_DATE AS TGL_DISKON_IPL, 
	(CASE WHEN i.IUI_DISC > 0 THEN 'SYSTEM' END) AS USER_DISKON_IPL, 
	i.IUI_REVISED_DESC AS KET_DISKON_IPL, 
	
	i.IUI_PPN_PERSEN AS PERSEN_PPN, 
	i.IUI_PPN AS NILAI_PPN, 
	
	i.SUI_TAX_NO AS NO_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_POST_FP, 
	(CASE WHEN r.IUR_ID IS NOT NULL THEN 1 ELSE 0 END) AS STATUS_BAYAR, 
	
	i.IUI_DESC AS KET_IVC, 
	
	m.CUSR_ID AS USER_MODIFIED, 
	i.IUI_LAST_MODIFIED AS MODIFIED_DATE, 
	c.CUSR_ID AS USER_CREATED, 
	i.IUI_CREATED AS CREATED_DATE, 
	
	a.IUA_ID AS ID_TEMP 
	
FROM 
	[pgl].[dbo].[IPL_UNIT_INVOICE] i 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] o ON i.IUI_OCCUPIED_ID = o.IUAO_ID 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA] a ON o.IUAO_AREA_ID = a.IUA_ID 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_RECEIPT] r ON i.IUI_ID = r.IUR_INVOICE_ID 
	
	LEFT JOIN [pgl].[dbo].[CLASP_USER] k ON r.IUR_CASHIER_ID = k.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] m ON i.IUI_OP_MODIFIED = m.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] c ON i.IUI_OP_CREATED = c.CUSR_ID 
WHERE 
	i.IUI_INVOICETYPE_ID = 3 AND -- Change to 7
	(
		(
			i.IUI_YEAR = 2014 AND 
			1 = ( 
				CASE WHEN r.IUR_IS_CANCELED = 'Y' THEN 0 ELSE 1 END 
			) 
		)
		OR
		(
			i.IUI_YEAR != 2014 AND 
			r.IUR_INVOICE_ID IS NULL
		)
	)
	
	--/*
	AND r.IUR_ID != 42470 -- <= DATA TIDAK KONSISTEN 
	--*/

ORDER BY i.IUI_MONTH ASC 
GO 


-- ====================== KWT_PEMBAYARAN_AI ====================== 
DELETE FROM KWT_PEMBAYARAN_AI WHERE TRX = 5 
GO 
INSERT INTO KWT_PEMBAYARAN_AI 
( 
	ID_PEMBAYARAN, 
	TRX, 
	NO_INVOICE, 
	TGL_JATUH_TEMPO, 
	
	PERIODE_TAG, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	
	NO_PELANGGAN, 
	
	KODE_SEKTOR, 
	KODE_CLUSTER, 
	KODE_BLOK, 
	STATUS_BLOK, 
	
	AKTIF_IPL, 
	
	LUAS_KAVLING, 
	
	NO_KWITANSI, 
	USER_BAYAR,
	TGL_BAYAR_BANK, 
	TGL_BAYAR_SYS, 
	KET_BAYAR, 
	
	JUMLAH_IPL, 
	ADM, 
	JUMLAH_BAYAR, 
	
	--DISKON_PERSEN_IPL, 
	DISKON_IPL, 
	TGL_DISKON_IPL, 
	USER_DISKON_IPL, 
	KET_DISKON_IPL, 
	
	PERSEN_PPN, 
	NILAI_PPN, 
	
	NO_FP, 
	TGL_FP, 
	TGL_POST_FP, 
	STATUS_BAYAR, 
	
	KET_IVC, 
	
	USER_MODIFIED, 
	MODIFIED_DATE, 
	USER_CREATED, 
	CREATED_DATE, 
	
	ID_TEMP 
) 
SELECT 
	('5#' + CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) + '#' + a.IUA_CODE) AS ID_PEMBAYARAN, 
	5 AS TRX, 
	i.IUI_NO AS NO_INVOICE, 
	i.IUI_DUE AS TGL_JATUH_TEMPO, 
	
	CAST((i.IUI_YEAR*100 + i.IUI_MONTH) AS VARCHAR) AS PERIODE_TAG, 
	
	CONVERT(VARCHAR(6),i.IUI_START_PERIOD,112) AS PERIODE_IPL_AWAL, 
	CONVERT(VARCHAR(6),i.IUI_END_PERIOD,112) AS PERIODE_IPL_AKHIR, 
	DATEDIFF(MONTH, i.IUI_START_PERIOD, i.IUI_END_PERIOD) + 1 AS JUMLAH_PERIODE_IPL, 
	
	a.IUA_CODE AS NO_PELANGGAN, 
	
	a.IUA_SECTOR_ID AS KODE_SEKTOR, 
	a.IUA_CLUSTER_ID AS KODE_CLUSTER, 
	a.IUA_CODE AS KODE_BLOK, 
	2 AS STATUS_BLOK, 
	
	1 AS AKTIF_IPL, 
	
	i.IUI_AREA_SQUARE AS LUAS_KAVLING, 
	
	r.IUR_NO AS NO_KWITANSI, 
	UPPER(k.CUSR_NAME) AS USER_BAYAR, 
	r.IUR_PAYMENT_DATE AS TGL_BAYAR_BANK, 
	r.IUR_CREATED AS TGL_BAYAR_SYS, 
	r.IUR_DESC AS KET_BAYAR, 
	
	i.IUI_TOTAL_PRICE AS JUMLAH_IPL, 
	i.IUI_ADM AS ADM, 
	(CASE WHEN r.IUR_ID IS NULL THEN 0 ELSE i.IUI_TOTAL_PAYMENT END) AS JUMLAH_BAYAR, 
	
	i.IUI_DISC AS DISKON_IPL, 
	i.IUI_REVISED_DATE AS TGL_DISKON_IPL, 
	(CASE WHEN i.IUI_DISC > 0 THEN 'SYSTEM' END) AS USER_DISKON_IPL, 
	i.IUI_REVISED_DESC AS KET_DISKON_IPL, 
	
	i.IUI_PPN_PERSEN AS PERSEN_PPN, 
	i.IUI_PPN AS NILAI_PPN, 
	
	i.SUI_TAX_NO AS NO_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_FP, 
	i.SUI_TAX_PROCEED_DATE AS TGL_POST_FP, 
	(CASE WHEN r.IUR_ID IS NOT NULL THEN 1 ELSE 0 END) AS STATUS_BAYAR, 
	
	i.IUI_DESC AS KET_IVC, 
	
	m.CUSR_ID AS USER_MODIFIED, 
	i.IUI_LAST_MODIFIED AS MODIFIED_DATE, 
	c.CUSR_ID AS USER_CREATED, 
	i.IUI_CREATED AS CREATED_DATE, 
	
	a.IUA_ID AS ID_TEMP 
	
FROM 
	[pgl].[dbo].[IPL_UNIT_INVOICE] i 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] o ON i.IUI_OCCUPIED_ID = o.IUAO_ID 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA] a ON o.IUAO_AREA_ID = a.IUA_ID 
	LEFT JOIN [pgl].[dbo].[IPL_UNIT_RECEIPT] r ON i.IUI_ID = r.IUR_INVOICE_ID 
	
	LEFT JOIN [pgl].[dbo].[CLASP_USER] k ON r.IUR_CASHIER_ID = k.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] m ON i.IUI_OP_MODIFIED = m.CUSR_ID 
	LEFT JOIN [pgl].[dbo].[CLASP_USER] c ON i.IUI_OP_CREATED = c.CUSR_ID 
WHERE 
i.IUI_INVOICETYPE_ID = 5 AND -- Change to 5
(
		(
			i.IUI_YEAR = 2014 AND 
			1 = ( 
				CASE WHEN r.IUR_IS_CANCELED = 'Y' THEN 0 ELSE 1 END 
			) 
		)
		OR
		(
			i.IUI_YEAR != 2014 AND 
			r.IUR_INVOICE_ID IS NULL
		)
	)
	
	--/*
	AND i.IUI_ID != 138808 -- <= 138806 B7/A1-12 DOUBLE PERIODE 
	--*/
	
ORDER BY i.IUI_MONTH ASC 
GO 


-- ====================== KWT_PERIODE_DEPOSIT ====================== 
DELETE FROM KWT_PERIODE_DEPOSIT 
GO 
INSERT INTO KWT_PERIODE_DEPOSIT 
( 
	ID_DEPOSIT, 
	TRX, 
	KODE_BLOK, 
	PERIODE_IPL_AWAL, 
	PERIODE_IPL_AKHIR, 
	JUMLAH_PERIODE_IPL, 
	KET_DEPOSIT, 
	STATUS_PROSES, 
	CREATED_DATE, 
	ID_TEMP 
) 
SELECT 
	('7#' + CONVERT(VARCHAR(6),b.IUBP_START_PERIOD,112) + '#' + a.IUA_CODE) AS ID_DEPOSIT, 
	7 AS TRX, 
	
	a.IUA_CODE AS KODE_BLOK, 
	CONVERT(VARCHAR(6),b.IUBP_START_PERIOD,112) AS PERIODE_IPL_AWAL, 
	CONVERT(VARCHAR(6),b.IUBP_END_PERIOD,112) AS PERIODE_IPL_AKHIR, 
	b.IUBP_PERIOD AS JUMLAH_PERIODE_IPL, 
	b.IUBP_DESC AS KET_DEPOSIT, 
	
	(CASE WHEN b.IUBP_IS_PROCEED = 'Y' THEN 1 ELSE 0 END) AS STATUS_PROSES, 
	b.IUBP_CREATED AS CREATED_DATE, 
	b.IUBP_AREA_OCCUPIED_ID AS ID_TEMP 
FROM 
	[pgl].[dbo].[IPL_UNIT_BUILD_PERIOD] b 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] o ON b.IUBP_AREA_OCCUPIED_ID = o.IUAO_ID 
	JOIN [pgl].[dbo].[IPL_UNIT_AREA] a ON o.IUAO_AREA_ID = a.IUA_ID 
WHERE 
	a.IUA_CODE IN ( 
		SELECT DISTINCT(KODE_BLOK) 
		FROM KWT_PEMBAYARAN_AI WHERE TRX IN (5,7) 
	) 
ORDER BY a.IUA_CODE, b.IUBP_END_PERIOD 
GO 

-- ====================== UPDATE NILAI_DEPOSIT ====================== 
UPDATE p 
	SET 
		p.NILAI_DEPOSIT = i.IUI_TOTAL_PAYMENT, 
		p.TIPE_DEPOSIT = (CASE WHEN i.IUI_TOTAL_PAYMENT > 0 THEN '1' ELSE '0' END) 
FROM 
	KWT_PERIODE_DEPOSIT p 
	JOIN [pgl].[dbo].[IPL_UNIT_INVOICE] i ON p.ID_TEMP = i.IUI_OCCUPIED_ID 
WHERE 
	p.TRX = 7 
	AND i.IUI_INVOICETYPE_ID = 3 
GO 

-- ====================== UPDATE NILAI_LAIN-LAIN ====================== 
UPDATE p 
	SET 
		p.NILAI_LAIN_LAIN = i.IUI_TOTAL_PAYMENT, 
		p.KET_LAIN_LAIN = i.IUI_DESC 
FROM 
	KWT_PERIODE_DEPOSIT p 
	JOIN [pgl].[dbo].[IPL_UNIT_INVOICE] i ON p.ID_TEMP = i.IUI_OCCUPIED_ID 
WHERE 
	p.TRX = 5 
	AND i.IUI_INVOICETYPE_ID = 5 
GO 
	
	
	
	UPDATE KWT_PEMBAYARAN_AI 
SET PERIODE_AIR = CONVERT(VARCHAR(6), DATEADD(MONTH, -1, CAST(PERIODE_TAG + '01' AS DATE)), 112) 
WHERE TRX IN (1,2,3,4) -- Untuk deposite dan lain-lain periode air dikosongkan
GO 

INSERT INTO KWT_PELANGGAN 
(
	KODE_BLOK,
	KODE_CLUSTER,
	KODE_SEKTOR,
	NO_PELANGGAN,
	INFO_TAGIHAN,
	TGL_PPJB,
	LUAS_KAVLING,
	LUAS_BANGUNAN,
	STATUS_BLOK,
	NAMA_PELANGGAN,
	NPWP,
	ALAMAT,
	NO_TELEPON,
	NO_HP,
	SM_NAMA_PELANGGAN,
	SM_ALAMAT,
	SM_NO_TELEPON,
	SM_NO_HP, 
	KET, 
	CREATED_DATE,
	
	TIPE_IPL,
	KEY_IPL
)
SELECT
	DISTINCT(a.IUA_CODE) AS KODE_BLOK,
	a.IUA_CLUSTER_ID AS KODE_CLUSTER,
	a.IUA_SECTOR_ID AS KODE_SEKTOR,
	a.IUA_ID AS NO_PELANGGAN,
	1 AS INFO_TAGIHAN,
	o.IUAO_PPJB_DATE AS TGL_PPJB,
	a.IUA_AREA_SQUARE AS LUAS_KAVLING,
	a.IUA_BUILD_SQUARE AS LUAS_BANGUNAN,
	9 AS STATUS_BLOK,
	
	c.IUC_NAME AS NAMA_PELANGGAN,
	c.IUC_NPWP AS NPWP,
	ISNULL(c.IUC_KTP_ADDR, '') + ISNULL(', ' + c.IUC_KTP_TOWN, '') AS ALAMAT,
	ISNULL(c.IUC_HOME_PHONE, '') + ISNULL(' / ' + c.IUC_OFFICE_PHONE, '') AS NO_TELEPON,
	c.IUC_CELL_PHONE AS NO_HP,
	
	c.IUC_NAME AS SM_NAMA_PELANGGAN,
	ISNULL(c.IUC_LETTER_ADDR, '') + CASE WHEN c.IUC_LETTER_TOWN IS NULL THEN '' ELSE ', ' + c.IUC_KTP_TOWN END AS SM_ALAMAT,
	ISNULL(c.IUC_HOME_PHONE, '') + ISNULL(' / ' + c.IUC_OFFICE_PHONE, '') AS SM_NO_TELEPON,
	c.IUC_CELL_PHONE AS SM_NO_HP, 
	'BLOK IMPORT' AS KET, 
	c.IUC_CREATED AS CREATED_DATE,
	
	(
		SELECT TOP 1
			REPLACE(h.IUAC_CODE, ' ', '-') 
		FROM [pgl].[dbo].[IPL_UNIT_AREA] g
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] h ON g.IUA_AREA_CLASS_ID = h.IUAC_ID 
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] j ON h.IUAC_ID = j.IUAFD_AREA_CLASS_ID
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE] z ON j.IUAFD_FEE_ID = z.IUAF_ID
		WHERE g.IUA_ID = a.IUA_ID 
		ORDER BY j.IUAFD_CREATED DESC
	) AS TIPE_IPL,
	(
		SELECT TOP 1
			(j.IUAFD_SK + '-' + REPLACE(h.IUAC_CODE, ' ', '-'))
		FROM [pgl].[dbo].[IPL_UNIT_AREA] g
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_CLASS] h ON g.IUA_AREA_CLASS_ID = h.IUAC_ID 
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE_DETAIL] j ON h.IUAC_ID = j.IUAFD_AREA_CLASS_ID
		JOIN [pgl].[dbo].[IPL_UNIT_AREA_FEE] z ON j.IUAFD_FEE_ID = z.IUAF_ID
		WHERE g.IUA_ID = a.IUA_ID 
		ORDER BY j.IUAFD_CREATED DESC
	) AS KEY_IPL
FROM 
	[pgl].[dbo].[IPL_UNIT_AREA] a, 
	(
		SELECT 
			DISTINCT(IUAO_AREA_ID), 
			(
				SELECT TOP 1 IUAO_CUSTOMER_ID 
				FROM [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] 
				WHERE IUAO_AREA_ID = x.IUAO_AREA_ID
				ORDER BY IUAO_ID DESC
			) AS IUAO_CUSTOMER_ID, 
			(
				SELECT TOP 1 IUAO_PPJB_DATE 
				FROM [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] 
				WHERE IUAO_AREA_ID = x.IUAO_AREA_ID 
				ORDER BY IUAO_ID DESC
			) AS IUAO_PPJB_DATE 
		FROM [pgl].[dbo].[IPL_UNIT_AREA_OCCUPIED] x
	) o,
	(SELECT * FROM [pgl].[dbo].[IPL_UNIT_CUSTOMER]) c
WHERE
	a.IUA_ID = o.IUAO_AREA_ID AND 
	o.IUAO_CUSTOMER_ID = c.IUC_ID AND 
	a.IUA_CODE IN (
		SELECT DISTINCT(KODE_BLOK)
		FROM KWT_PEMBAYARAN_AI b 
		WHERE 
			b.KODE_BLOK NOT IN (SELECT KODE_BLOK FROM KWT_PELANGGAN)
		GROUP BY b.KODE_BLOK
	)
GO 

--- =================
TRUNCATE TABLE KWT_CLUSTER 
GO 
INSERT INTO KWT_CLUSTER 
( 
	KODE_CLUSTER, 
	KODE_SEKTOR, 
	NAMA_CLUSTER 
) 
SELECT 
	KODE_CLUSTER, 
	KODE_SEKTOR, 
	NAMA_CLUSTER 
FROM [pgl].[dbo].[KWT_CLUSTER] 
GO 

-- KWT_CLUSTER ASP 
INSERT INTO KWT_CLUSTER 
( 
	KODE_CLUSTER, 
	KODE_SEKTOR, 
	NAMA_CLUSTER 
) 
SELECT 
	IUCLS_ID AS KODE_CLUSTER, 
	NULL AS KODE_SEKTOR, 
	IUCLS_NAME AS NAMA_CLUSTER 
FROM [pgl].[dbo].[IPL_UNIT_CLUSTER] 
GO 

-- ==================
UPDATE KWT_PEMBAYARAN_AI SET KODE_CLUSTER = '005' WHERE KODE_CLUSTER = '65' AND STATUS_BLOK ! = 3
UPDATE KWT_PELANGGAN SET KODE_CLUSTER = '005' WHERE KODE_CLUSTER = '65' AND STATUS_BLOK ! = 3
GO 

-- MASSIVE UPDATE (LIKE A BOSS) KODE_SEKTOR, KWT_CLUSTER
DECLARE 
@kc3 VARCHAR(50), 
@kc2 VARCHAR(50),
@ks VARCHAR(50)
	
DECLARE cur_kc CURSOR FOR 
SELECT KODE_CLUSTER AS KC3, 
	( 
		SELECT KODE_CLUSTER 
		FROM KWT_CLUSTER 
		WHERE 
			LEN(KODE_CLUSTER) < 3 AND 
			NAMA_CLUSTER = c.NAMA_CLUSTER 
	) AS KC2, 
	KODE_SEKTOR AS KS 
FROM KWT_CLUSTER c 
WHERE LEN(KODE_CLUSTER) > 2 
OPEN cur_kc 

FETCH NEXT FROM cur_kc INTO @kc3, @kc2, @ks 

WHILE @@FETCH_STATUS = 0 
BEGIN 

	IF (@kc2 IS NOT NULL) BEGIN 
		UPDATE KWT_PELANGGAN 
		SET 
			KODE_CLUSTER = @kc3, 
			KODE_SEKTOR = @ks 
		WHERE KODE_CLUSTER = @kc2 
		
		UPDATE KWT_PEMBAYARAN_AI 
		SET 
			KODE_CLUSTER = @kc3, 
			KODE_SEKTOR = @ks 
		WHERE KODE_CLUSTER = @kc2 
		 
		DELETE FROM KWT_CLUSTER WHERE KODE_CLUSTER = @kc2 
	END 
	 
	FETCH NEXT FROM cur_kc INTO @kc3, @kc2, @ks 
END 

CLOSE cur_kc 
DEALLOCATE cur_kc 
GO 


-- ================== UPDATE PELANGGAN BARU ==================
DECLARE 
@cou_np NUMERIC(25) = (SELECT TOP 1 COU_NP+1 FROM KWT_PARAMETER), 
@kp VARCHAR(100),
@onp VARCHAR(100)
	
DECLARE cur_np CURSOR FOR 
SELECT 
	CAST(p.NO_PELANGGAN AS VARCHAR(100)) AS ONP, 
	(ISNULL(s.KODE_PEL,'00') + CAST(RIGHT(YEAR(GETDATE()),2) AS VARCHAR) + '0') AS KP
FROM 
	KWT_PELANGGAN p
	LEFT JOIN KWT_SEKTOR s ON p.KODE_SEKTOR = s.KODE_SEKTOR
WHERE STATUS_BLOK = 9
ORDER BY CAST(p.NO_PELANGGAN AS INT)
	
OPEN cur_np 
FETCH NEXT FROM cur_np INTO @onp, @kp 

WHILE @@FETCH_STATUS = 0 
BEGIN 
	UPDATE KWT_PELANGGAN 
	SET NO_PELANGGAN = @kp + RIGHT('0000000' + CAST(@cou_np AS VARCHAR(100)), 7)
	WHERE NO_PELANGGAN = @onp
	
	SET @cou_np = @cou_np + 1;
	
	FETCH NEXT FROM cur_np INTO @onp, @kp
END 

UPDATE KWT_PARAMETER SET COU_NP = @cou_np

CLOSE cur_np 
DEALLOCATE cur_np 
GO 




-- ================== UPDATE PEMBAYARAN (NO_PELANGGAN, LUAS_KAVLING)
UPDATE b SET 
	b.NO_PELANGGAN = p.NO_PELANGGAN
FROM 
	KWT_PEMBAYARAN_AI b 
	JOIN KWT_PELANGGAN p ON b.KODE_BLOK = p.KODE_BLOK 
WHERE b.STATUS_BLOK ! = 3
GO 

-- ================== UPDATE PEMBAYARAN (ID_PEMBAYARAN)
UPDATE KWT_PEMBAYARAN_AI 
SET ID_PEMBAYARAN = (CAST(TRX AS VARCHAR(1)) + '#' + PERIODE_TAG + '#' + NO_PELANGGAN)
WHERE STATUS_BLOK ! = 3
GO

-- ================== UPDATE PELANGGAN (KODE_SEKTOR KODE_CLUSTER)
UPDATE p SET 
	p.KODE_CLUSTER = c.KODE_CLUSTER,
	p.KODE_SEKTOR = s.KODE_SEKTOR
FROM 
	KWT_PELANGGAN p 
	JOIN KWT_CLUSTER c ON p.KODE_CLUSTER = c.KODE_CLUSTER
	JOIN KWT_SEKTOR s ON c.KODE_SEKTOR = s.KODE_SEKTOR
WHERE p.STATUS_BLOK ! = 3
GO 

-- ================== UPDATE PEMBAYARAN (KODE_SEKTOR KODE_CLUSTER)
UPDATE b SET 
	b.KODE_CLUSTER = p.KODE_CLUSTER,
	b.KODE_SEKTOR = p.KODE_SEKTOR,
	b.LUAS_KAVLING = p.LUAS_KAVLING
FROM 
	KWT_PEMBAYARAN_AI b 
	JOIN KWT_PELANGGAN p ON b.KODE_BLOK = p.KODE_BLOK
WHERE b.STATUS_BLOK ! = 3
GO 

-- ================== UPDATE KEY PELANGGAN
UPDATE p SET 
	p.STATUS_BLOK = ISNULL((
		SELECT TOP 1 STATUS_BLOK 
		FROM KWT_PEMBAYARAN_AI 
		WHERE KODE_BLOK = p.KODE_BLOK
		ORDER BY STATUS_BLOK DESC, CAST(PERIODE_TAG AS INT) DESC 
	), p.STATUS_BLOK)
FROM 
	KWT_PELANGGAN p 
WHERE p.STATUS_BLOK ! = 3
GO 

UPDATE KWT_PELANGGAN 
SET KEY_AIR = REPLACE(KEY_AIR, ' ', '-'), 
	KEY_IPL = REPLACE(KEY_IPL, ' ', '-'), 
	TIPE_AIR = REPLACE(TIPE_AIR, ' ', '-'), 
	TIPE_IPL = REPLACE(TIPE_IPL, ' ', '-') 
GO 

UPDATE KWT_PELANGGAN SET AKTIF_AIR = 1 WHERE KEY_AIR IS NOT NULL AND KEY_AIR NOT LIKE '%X0%'
UPDATE KWT_PELANGGAN SET AKTIF_IPL = 1 WHERE KEY_IPL IS NOT NULL AND KEY_IPL NOT LIKE '%X0%' 
UPDATE KWT_PELANGGAN SET AKTIF_AIR = 0 WHERE KEY_AIR IS NULL OR KEY_AIR LIKE '%X0%'
UPDATE KWT_PELANGGAN SET AKTIF_IPL = 0 WHERE KEY_IPL IS NULL OR KEY_IPL LIKE '%X0%'
GO 

-- UPDATE GOLONGAN & TIPE_DENDA AIR
UPDATE KWT_PELANGGAN 
SET GOLONGAN = 1, TIPE_DENDA = 1
WHERE
	KEY_AIR LIKE '%B%'
	OR KEY_IPL LIKE '%KB%' 
	OR KEY_IPL LIKE '%BB%' 
	OR KEY_IPL LIKE '%MB%' 	
GO 

UPDATE KWT_PELANGGAN 
SET GOLONGAN = 1, TIPE_DENDA = 1
WHERE KEY_AIR LIKE '%B%' 
GO 

UPDATE KWT_PEMBAYARAN_AI 
SET GOLONGAN = 1, TIPE_DENDA = 1
WHERE
	KEY_AIR LIKE '%B%'
	OR KEY_IPL LIKE '%KB%' 
	OR KEY_IPL LIKE '%BB%' 
	OR KEY_IPL LIKE '%MB%' 	
GO 

UPDATE KWT_PEMBAYARAN_AI 
SET GOLONGAN = 1, TIPE_DENDA = 1
WHERE KEY_AIR LIKE '%B%' 
GO 

-- ================== UPDATE KEY
UPDATE KWT_PEMBAYARAN_AI SET 
	KEY_AIR = REPLACE(KEY_AIR, ' ', '-'),
	KEY_IPL = REPLACE(KEY_IPL, ' ', '-')
GO

-- ================== UPDATE USERS
-- ================== UPDATE USER
UPDATE b SET 
	b.USER_BAYAR = ISNULL(CAST(k.ID_USER AS VARCHAR), b.USER_BAYAR), 
	b.USER_CETAK_KWT = ISNULL(CAST(p.ID_USER AS VARCHAR), b.USER_CETAK_KWT), 
	
	b.USER_DISKON_AIR = ISNULL(CAST(ua.ID_USER AS VARCHAR), b.USER_DISKON_AIR), 
	b.USER_DISKON_IPL = ISNULL(CAST(ui.ID_USER AS VARCHAR), b.USER_DISKON_IPL), 
	b.USER_BATAL = ISNULL(CAST(ub.ID_USER AS VARCHAR), b.USER_BATAL), 
	
	b.USER_MODIFIED = ISNULL(CAST(m.ID_USER AS VARCHAR), b.USER_MODIFIED), 
	b.USER_CREATED = ISNULL(CAST(c.ID_USER AS VARCHAR), b.USER_CREATED) 
FROM 
	KWT_PEMBAYARAN_AI b 
	LEFT JOIN KWT_USER k ON b.USER_BAYAR = k.LOGIN_USER 
	LEFT JOIN KWT_USER p ON b.USER_CETAK_KWT = p.LOGIN_USER 

	LEFT JOIN KWT_USER ua ON b.USER_DISKON_AIR = ua.LOGIN_USER 
	LEFT JOIN KWT_USER ui ON b.USER_DISKON_IPL = ui.LOGIN_USER 
	LEFT JOIN KWT_USER ub ON b.USER_BATAL = ub.LOGIN_USER 

	LEFT JOIN KWT_USER m ON b.USER_MODIFIED = m.LOGIN_USER 
	LEFT JOIN KWT_USER c ON b.USER_CREATED = c.LOGIN_USER 
GO 


UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = '1' WHERE USER_BAYAR = '-' AND STATUS_BAYAR = 1

-- SET KE VIRTUALACCOUNT (2)
UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = '2' WHERE USER_BAYAR IS NULL AND STATUS_BAYAR = 1
UPDATE KWT_PEMBAYARAN_AI SET USER_BAYAR = '2' WHERE USER_BAYAR = 'VIRTUAL ACCOUNT'
UPDATE KWT_PEMBAYARAN_AI SET USER_MODIFIED = '2' WHERE USER_MODIFIED LIKE '%VIRTUAL ACCOUNT%'
GO

-- ================== UPDATE TAGIHAN CANCEL ==================
UPDATE KWT_PEMBAYARAN_AI 
SET STATUS_BAYAR = 1
WHERE (JUMLAH_AIR + ABONEMEN + JUMLAH_IPL + ADM + DENDA - DISKON_AIR - DISKON_IPL) < 1 
GO

-- ============ UPDATE ++ ==================
UPDATE KWT_PELANGGAN SET NO_HP = NULL WHERE NO_HP = '-'
UPDATE KWT_PELANGGAN SET SM_NO_HP = NULL WHERE SM_NO_HP = '-'

UPDATE KWT_PELANGGAN SET NO_TELEPON = NULL WHERE NO_TELEPON = '- / -'
UPDATE KWT_PELANGGAN SET NO_TELEPON = REPLACE(NO_TELEPON, '- / ', '')
UPDATE KWT_PELANGGAN SET NO_TELEPON = REPLACE(NO_TELEPON, ' / -', '')
UPDATE KWT_PELANGGAN SET SM_NO_TELEPON = NULL WHERE SM_NO_TELEPON = '- / -'
UPDATE KWT_PELANGGAN SET SM_NO_TELEPON = REPLACE(SM_NO_TELEPON, '- / ', '')
UPDATE KWT_PELANGGAN SET SM_NO_TELEPON = REPLACE(SM_NO_TELEPON, ' / -', '')

UPDATE KWT_PELANGGAN 
SET NO_REKENING = dbo.TRIM(NO_REKENING), 
	KODE_BANK = dbo.TRIM(KODE_BANK),
	NO_HP = dbo.TRIM(NO_HP),
	SM_NO_HP = dbo.TRIM(SM_NO_HP),
	NO_TELEPON = dbo.TRIM(NO_TELEPON), 
	SM_NO_TELEPON = dbo.TRIM(SM_NO_TELEPON)

UPDATE KWT_PELANGGAN SET NO_REKENING = NULL WHERE NO_REKENING = ''
UPDATE KWT_PELANGGAN SET KODE_BANK = NULL WHERE KODE_BANK = ''
UPDATE KWT_PELANGGAN SET NO_HP = NULL WHERE NO_HP = ''
UPDATE KWT_PELANGGAN SET SM_NO_HP = NULL WHERE SM_NO_HP = ''
UPDATE KWT_PELANGGAN SET NO_TELEPON = NULL WHERE NO_TELEPON = ''
UPDATE KWT_PELANGGAN SET SM_NO_TELEPON = NULL WHERE SM_NO_TELEPON = '' 
GO 

-- ================== ERROR CHECKING ================== 
SELECT 
	(SELECT COUNT(USER_BAYAR) FROM KWT_PEMBAYARAN_AI WHERE USER_BAYAR IS NOT NULL AND USER_BAYAR NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_BAYAR, 
	(SELECT COUNT(USER_CETAK_KWT) FROM KWT_PEMBAYARAN_AI WHERE USER_CETAK_KWT IS NOT NULL AND USER_CETAK_KWT NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_CETAK_KWT, 
	
	(SELECT COUNT(USER_DISKON_AIR) FROM KWT_PEMBAYARAN_AI WHERE USER_DISKON_AIR IS NOT NULL AND USER_DISKON_AIR NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_DISKON_AIR, 
	(SELECT COUNT(USER_DISKON_IPL) FROM KWT_PEMBAYARAN_AI WHERE USER_DISKON_IPL IS NOT NULL AND USER_DISKON_IPL NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_DISKON_IPL, 
	(SELECT COUNT(USER_BATAL) FROM KWT_PEMBAYARAN_AI WHERE USER_BATAL IS NOT NULL AND USER_BATAL NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_BATAL, 
	
	(SELECT COUNT(USER_MODIFIED) FROM KWT_PEMBAYARAN_AI WHERE USER_MODIFIED IS NOT NULL AND USER_MODIFIED NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_MODIFIED, 
	(SELECT COUNT(USER_CREATED) FROM KWT_PEMBAYARAN_AI WHERE USER_CREATED IS NOT NULL AND USER_CREATED NOT IN (SELECT CAST(ID_USER AS VARCHAR) FROM KWT_USER)) AS USER_CREATED 
GO 


SELECT DISTINCT KEY_IPL AS KEY_IPL_KWT_PELANGGAN_NOT_IN_MASTER 
FROM KWT_PELANGGAN 
WHERE KEY_IPL NOT IN (SELECT KEY_IPL FROM KWT_TARIF_IPL) 
GO 
SELECT DISTINCT KEY_AIR AS KEY_AIR_KWT_PELANGGAN_NOT_IN_MASTER 
FROM KWT_PELANGGAN 
WHERE KEY_AIR NOT IN (SELECT KEY_AIR FROM KWT_TARIF_AIR) 
GO 


SELECT DISTINCT KEY_IPL AS KEY_IPL_KWT_PEMBAYARAN_AI_NOT_IN_MASTER 
FROM KWT_PEMBAYARAN_AI 
WHERE KEY_IPL NOT IN (SELECT KEY_IPL FROM KWT_TARIF_IPL) 
GO 
SELECT DISTINCT KEY_AIR AS KEY_AIR_KWT_PEMBAYARAN_AI_NOT_IN_MASTER 
FROM KWT_PEMBAYARAN_AI 
WHERE KEY_AIR NOT IN (SELECT KEY_AIR FROM KWT_TARIF_AIR) 
GO 


SELECT KODE_BLOK, KODE_SEKTOR, '' AS KODE_SEKTOR_KWT_PELANGGAN_NOT_IN_KWT_SEKTOR 
FROM KWT_PELANGGAN 
WHERE KODE_SEKTOR NOT IN (SELECT KODE_SEKTOR FROM KWT_SEKTOR) 
ORDER BY KODE_BLOK, KODE_SEKTOR 
GO 
SELECT KODE_BLOK, KODE_CLUSTER, '' AS KODE_CLUSTER_KWT_PELANGGAN_NOT_IN_KWT_CLUSTER 
FROM KWT_PELANGGAN 
WHERE KODE_CLUSTER NOT IN (SELECT KODE_CLUSTER FROM KWT_CLUSTER) 
ORDER BY KODE_BLOK, KODE_CLUSTER
GO 


SELECT KODE_BLOK, KODE_SEKTOR, '' AS KODE_SEKTOR_KWT_PEMBAYARAN_AI_NOT_IN_KWT_SEKTOR 
FROM KWT_PEMBAYARAN_AI 
WHERE KODE_SEKTOR NOT IN (SELECT KODE_SEKTOR FROM KWT_SEKTOR) 
ORDER BY KODE_BLOK, KODE_SEKTOR
GO 
SELECT KODE_BLOK, KODE_CLUSTER, '' AS KODE_CLUSTER_KWT_PEMBAYARAN_AI_NOT_IN_KWT_CLUSTER 
FROM KWT_PEMBAYARAN_AI 
WHERE KODE_CLUSTER NOT IN (SELECT KODE_CLUSTER FROM KWT_CLUSTER) 
ORDER BY KODE_BLOK, KODE_CLUSTER
GO 


SELECT DISTINCT NO_PELANGGAN AS NO_PELANGGAN_KWT_PEMBAYARAN_AI_NOT_IN_MASTER 
FROM KWT_PEMBAYARAN_AI 
WHERE NO_PELANGGAN NOT IN (SELECT NO_PELANGGAN FROM KWT_PELANGGAN)
GO 
SELECT DISTINCT KODE_BLOK AS KODE_BLOK_KWT_PEMBAYARAN_AI_NOT_IN_MASTER 
FROM KWT_PEMBAYARAN_AI 
WHERE KODE_BLOK NOT IN (SELECT KODE_BLOK FROM KWT_PELANGGAN)
GO 


SELECT COUNT(KODE_BLOK) AS KODE_BLOK, '' AS KWT_PELANGGAN_STATUS_BLOK_BELUM_FIX
FROM KWT_PELANGGAN WHERE STATUS_BLOK = 9
GO 



--==================================== TRIGGER ====================================

-- ========================= INVOICE =========================
--KWT_PEMBAYARAN_AI (NO_INVOICE)
IF OBJECT_ID ('KWT_PEMBAYARAN_AI_IVC', 'TR') IS NOT NULL
	DROP TRIGGER KWT_PEMBAYARAN_AI_IVC;
GO
CREATE TRIGGER KWT_PEMBAYARAN_AI_IVC
	ON KWT_PEMBAYARAN_AI
	AFTER INSERT
AS
	SET NOCOUNT ON
	DECLARE 
	@n VARCHAR(50),
		@rkv VARCHAR(50), @rbg VARCHAR(50), @rhn VARCHAR(50), @rrv VARCHAR(50), 
		@rdbg VARCHAR(50), @rdrv VARCHAR(50),
		@rlbg VARCHAR(50), @rlrv VARCHAR(50), 
	@idp VARCHAR(50), 
	@trx INT,
	@aktif_air INT = 0,
	@aktif_ipl INT = 0,
	@na VARCHAR(10) = '',
	@my VARCHAR(10) = 
		CASE MONTH(GETDATE())
			WHEN 1 THEN 'I' WHEN 2 THEN 'II' WHEN 3 THEN 'III' WHEN 4 THEN 'IV' WHEN 5 THEN 'V' WHEN 6 THEN 'VI' WHEN 7 THEN 'VII' WHEN 8 THEN 'VIII' WHEN 9 THEN 'IX' WHEN 10 THEN 'X' WHEN 11 THEN 'XI' WHEN 12 THEN 'XII'
			ELSE '-'
		END + '/' +
		CAST(YEAR(GETDATE()) AS VARCHAR)
		
	SELECT TOP 1 
		@rkv = REG_IVC_KV,
		@rbg = REG_IVC_BG,
		@rhn = REG_IVC_HN,
		@rrv = REG_IVC_RV,
		
		@rlbg = REG_IVC_LBG,
		@rlrv = REG_IVC_LRV, 
		
		@rdbg = REG_IVC_DBG,
		@rdrv = REG_IVC_DRV
	FROM KWT_PARAMETER
	
	DECLARE cur_ins CURSOR FOR SELECT ID_PEMBAYARAN, TRX, AKTIF_AIR, AKTIF_IPL FROM INSERTED
	OPEN cur_ins
	
	FETCH NEXT FROM cur_ins INTO @idp, @trx, @aktif_air, @aktif_ipl
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF (@aktif_ipl = 1 AND @aktif_air = 0) BEGIN SET @na = 'NA/' END ELSE BEGIN SET @na = '' END
		
		IF (@trx = 1) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_KV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rkv + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_KV = COU_IVC_KV + 1
		END
		ELSE IF (@trx = 2) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_BG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rbg + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_BG = COU_IVC_BG + 1
		END
		ELSE IF (@trx = 3) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_HN AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rhn + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_HN = COU_IVC_HN + 1
		END
		ELSE IF (@trx = 4) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_RV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rrv + @na + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_RV = COU_IVC_RV + 1
		END
		
		
		ELSE IF (@trx = 5) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_LBG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rlbg + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_LBG = COU_IVC_LBG + 1
		END
		ELSE IF (@trx = 6) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_LRV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rlrv + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_LRV = COU_IVC_LRV + 1
		END
		
		
		ELSE IF (@trx = 7) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_DBG AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rdbg + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_DBG = COU_IVC_DBG + 1
		END
		ELSE IF (@trx = 8) BEGIN
			SELECT TOP 1 @n = CAST(COU_IVC_DRV AS VARCHAR(10)) FROM KWT_PARAMETER
			UPDATE KWT_PEMBAYARAN_AI SET NO_INVOICE = @n + @rdrv + @my WHERE ID_PEMBAYARAN = @idp
			UPDATE KWT_PARAMETER SET COU_IVC_DRV = COU_IVC_DRV + 1
		END
		
		FETCH NEXT FROM cur_ins INTO @idp, @trx, @aktif_air, @aktif_ipl
	END
	
	CLOSE cur_ins
	DEALLOCATE cur_ins
GO

-- ========================= UPDATE KWITANSI =========================
--KWT_PEMBAYARAN_AI (STATUS_BAYAR)
IF OBJECT_ID ('KWT_PEMBAYARAN_AI_KWT', 'TR') IS NOT NULL
	DROP TRIGGER KWT_PEMBAYARAN_AI_KWT;
GO
CREATE TRIGGER KWT_PEMBAYARAN_AI_KWT 
	ON KWT_PEMBAYARAN_AI
	AFTER UPDATE
AS 
IF UPDATE (STATUS_BAYAR)
BEGIN
	SET NOCOUNT ON
	DECLARE 
	@n VARCHAR(50),
		@rkv VARCHAR(50), @rbg VARCHAR(50), @rhn VARCHAR(50), @rrv VARCHAR(50), 
		@rdbg VARCHAR(50), @rdrv VARCHAR(50),
		@rlbg VARCHAR(50), @rlrv VARCHAR(50), 
	@idp VARCHAR(50),
	@trx INT,
	@sb INT,
	@aktif_air INT = 0,
	@aktif_ipl INT = 0,
	@na VARCHAR(10) = '',
	@my VARCHAR(10) = 
		CASE MONTH(GETDATE())
			WHEN 1 THEN 'I' WHEN 2 THEN 'II' WHEN 3 THEN 'III' WHEN 4 THEN 'IV' WHEN 5 THEN 'V' WHEN 6 THEN 'VI' WHEN 7 THEN 'VII' WHEN 8 THEN 'VIII' WHEN 9 THEN 'IX' WHEN 10 THEN 'X' WHEN 11 THEN 'XI' WHEN 12 THEN 'XII'
			ELSE '-'
		END + '/' +
		CAST(YEAR(GETDATE()) AS VARCHAR)

	SELECT TOP 1 
		@rkv = REG_KWT_KV,
		@rbg = REG_KWT_BG,
		@rhn = REG_KWT_HN,
		@rrv = REG_KWT_RV,
		
		@rlbg = REG_KWT_LBG,
		@rlrv = REG_KWT_LRV, 
		
		@rdbg = REG_KWT_DBG,
		@rdrv = REG_KWT_DRV
	FROM KWT_PARAMETER
	
	DECLARE cur_upd CURSOR FOR SELECT ID_PEMBAYARAN, TRX, STATUS_BAYAR, AKTIF_AIR, AKTIF_IPL FROM INSERTED;
	OPEN cur_upd;
	
	FETCH NEXT FROM cur_upd INTO @idp, @trx, @sb, @aktif_air, @aktif_ipl
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
	
		IF (@sb = 1)
		BEGIN
			IF (@aktif_ipl = 1 AND @aktif_air = 0) BEGIN SET @na = 'NA/' END ELSE BEGIN SET @na = '' END
			
			IF (@trx = 1) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_KV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rkv + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_KV = COU_KWT_KV + 1
			END
			ELSE IF (@trx = 2) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_BG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rbg + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_BG = COU_KWT_BG + 1
			END
			ELSE IF (@trx = 3) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_HN AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rhn + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_HN = COU_KWT_HN + 1
			END
			ELSE IF (@trx = 4) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_RV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rrv + @na + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_RV = COU_KWT_RV + 1
			END
			
			
			ELSE IF (@trx = 5) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_LBG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rlbg + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_LBG = COU_KWT_LBG + 1
			END
			ELSE IF (@trx = 6) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_LRV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rlrv + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_LRV = COU_KWT_LRV + 1
			END 
			
			
			ELSE IF (@trx = 7) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_DBG AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rdbg + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_DBG = COU_KWT_DBG + 1
			END
			ELSE IF (@trx = 8) BEGIN
				SELECT TOP 1 @n = CAST(COU_KWT_DRV AS VARCHAR(10)) FROM KWT_PARAMETER
				UPDATE KWT_PEMBAYARAN_AI SET NO_KWITANSI = @n + @rdrv + @my WHERE ID_PEMBAYARAN = @idp
				UPDATE KWT_PARAMETER SET COU_KWT_DRV = COU_KWT_DRV + 1
			END 
			
		END 
		
		FETCH NEXT FROM cur_upd INTO @idp, @trx, @sb, @aktif_air, @aktif_ipl
	END 
	 
	CLOSE cur_upd 
	DEALLOCATE cur_upd 
	
END 
GO 



